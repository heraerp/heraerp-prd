%% Auto-generated by scripts/generate-mermaid-diagrams.ts
%% Preset: APPOINTMENT
graph TD
  %% Layout tuning
  linkStyle default stroke-width:1.2px

  %% Entity root node
  APPOINTMENT["APPOINTMENT\n(APPOINTMENT)"]:::entityClass
  classDef entityClass fill:#eef2ff,stroke:#6366f1,color:#3730a3,stroke-width:1.2px;

  subgraph "APPOINTMENT â€” Dynamic Fields"
    classDef fld fill:#f6f8fa,stroke:#c9d1d9,stroke-width:1px,color:#444;
    APPOINTMENT --> APPOINTMENT__start_time["start_time\n:date\nHERA.SALON.APPT.DYN.START.v1"]
    APPOINTMENT --> APPOINTMENT__end_time["end_time\n:date\nHERA.SALON.APPT.DYN.END.v1"]
    APPOINTMENT --> APPOINTMENT__notes["notes\n:text\nHERA.SALON.APPT.DYN.NOTES.v1"]
    APPOINTMENT --> APPOINTMENT__status["status\n:text\nHERA.SALON.APPT.DYN.STATUS.v1"]
    APPOINTMENT --> APPOINTMENT__reminder_sent["reminder_sent\n:boolean\nHERA.SALON.APPT.DYN.REMINDER.v1"]
    class APPOINTMENT__start_time fld;
    class APPOINTMENT__end_time fld;
    class APPOINTMENT__notes fld;
    class APPOINTMENT__status fld;
    class APPOINTMENT__reminder_sent fld;
  end

  APPOINTMENT --> FOR_CUSTOMER["FOR_CUSTOMER"]
  APPOINTMENT --> WITH_EMPLOYEE["WITH_EMPLOYEE"]
  APPOINTMENT --> INCLUDES_SERVICE["INCLUDES_SERVICE"]
  classDef relTarget fill:#fff7ed,stroke:#fdba74,color:#7c2d12,stroke-width:1px;
  class FOR_CUSTOMER relTarget;
  class WITH_EMPLOYEE relTarget;
  class INCLUDES_SERVICE relTarget;

    APPOINTMENT_CODES["Smart Codes:<br/>1. HERA.SALON.APPT.DYN.START.v1<br/>2. HERA.SALON.APPT.DYN.END.v1<br/>3. HERA.SALON.APPT.DYN.NOTES.v1<br/>4. HERA.SALON.APPT.DYN.STATUS.v1"]
  APPOINTMENT -.-> APPOINTMENT_CODES
  class APPOINTMENT_CODES smartCodeClass;
  classDef smartCodeClass fill:#f0f9ff,stroke:#0ea5e9,color:#0c4a6e,stroke-width:1px,font-size:10px;
