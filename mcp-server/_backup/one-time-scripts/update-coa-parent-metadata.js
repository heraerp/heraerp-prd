#!/usr/bin/env node

const { createClient } = require('@supabase/supabase-js')
require('dotenv').config({ path: '../.env.local' })

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY
const supabase = createClient(supabaseUrl, supabaseServiceKey)

// Kerala Furniture Works (Demo) organization ID
const FURNITURE_ORG_ID = 'f0af4ced-9d12-4a55-a649-b484368db249'

// Use the same hierarchy map from before
const hierarchyMap = {
  // ASSETS
  '1100000': '1000000', '1110000': '1100000', '1111000': '1110000', '1112000': '1110000', '1113000': '1110000', '1114000': '1110000',
  '1120000': '1100000', '1121000': '1120000', '1122000': '1120000', '1123000': '1120000', '1129000': '1120000',
  '1130000': '1100000', '1131000': '1130000', '1132000': '1130000', '1133000': '1130000', '1134000': '1130000', '1135000': '1130000', '1136000': '1130000',
  '1140000': '1100000', '1141000': '1140000', '1142000': '1140000', '1143000': '1140000',
  '1150000': '1100000', '1151000': '1150000', '1152000': '1150000', '1153000': '1150000', '1154000': '1150000',
  '1200000': '1000000', '1210000': '1200000', '1211000': '1210000', '1212000': '1210000', '1213000': '1210000', '1214000': '1210000', '1215000': '1210000', '1216000': '1210000', '1217000': '1210000',
  '1220000': '1200000', '1221000': '1220000', '1222000': '1220000', '1223000': '1220000', '1224000': '1220000', '1225000': '1220000',
  
  // LIABILITIES
  '2100000': '2000000', '2110000': '2100000', '2111000': '2110000', '2112000': '2110000', '2113000': '2110000',
  '2120000': '2100000', '2121000': '2120000', '2122000': '2120000', '2123000': '2120000',
  '2130000': '2100000', '2131000': '2130000', '2132000': '2130000', '2133000': '2130000', '2134000': '2130000',
  '2140000': '2100000', '2141000': '2140000', '2142000': '2140000', '2143000': '2140000', '2144000': '2140000', '2145000': '2140000', '2146000': '2140000', '2147000': '2140000', '2148000': '2140000',
  '2200000': '2000000', '2210000': '2200000', '2211000': '2210000', '2212000': '2210000', '2213000': '2210000',
  
  // EQUITY
  '3100000': '3000000', '3110000': '3100000', '3120000': '3100000',
  '3200000': '3000000', '3210000': '3200000', '3220000': '3200000', '3230000': '3200000',
  
  // INCOME
  '4100000': '4000000', '4110000': '4100000', '4111000': '4110000', '4112000': '4110000', '4113000': '4110000', '4114000': '4110000',
  '4120000': '4100000', '4121000': '4120000', '4122000': '4120000',
  '4130000': '4100000', '4131000': '4130000', '4132000': '4130000', '4133000': '4130000',
  '4190000': '4100000', '4191000': '4190000', '4192000': '4190000',
  '4200000': '4000000', '4210000': '4200000', '4220000': '4200000', '4230000': '4200000', '4240000': '4200000',
  
  // EXPENSES
  '5100000': '5000000', '5110000': '5100000', '5111000': '5110000', '5112000': '5110000', '5113000': '5110000', '5114000': '5110000', '5115000': '5110000',
  '5120000': '5100000', '5121000': '5120000', '5122000': '5120000', '5123000': '5120000', '5124000': '5120000',
  '5130000': '5100000', '5131000': '5130000', '5132000': '5130000', '5133000': '5130000', '5134000': '5130000', '5135000': '5130000',
  '5200000': '5000000', '5210000': '5200000', '5220000': '5200000', '5230000': '5200000', '5240000': '5200000', '5250000': '5200000', '5260000': '5200000',
  '5300000': '5000000', '5310000': '5300000', '5320000': '5300000', '5330000': '5300000', '5340000': '5300000', '5350000': '5300000',
  '5400000': '5000000', '5410000': '5400000', '5420000': '5400000', '5430000': '5400000', '5440000': '5400000', '5450000': '5400000', '5460000': '5400000', '5470000': '5400000',
  '5500000': '5000000', '5510000': '5500000', '5520000': '5500000', '5530000': '5500000', '5540000': '5500000',
  '5600000': '5000000', '5610000': '5600000', '5620000': '5600000', '5630000': '5600000', '5640000': '5600000',
  '5700000': '5000000', '5710000': '5700000', '5720000': '5700000', '5730000': '5700000', '5740000': '5700000',
  '5900000': '5000000', '5910000': '5900000', '5920000': '5900000'
}

async function updateParentMetadata() {
  console.log('üìù Updating GL account parent metadata...')
  
  try {
    // Get all GL accounts
    const { data: glAccounts } = await supabase
      .from('core_entities')
      .select('*')
      .eq('organization_id', FURNITURE_ORG_ID)
      .eq('entity_type', 'gl_account')
    
    if (!glAccounts || glAccounts.length === 0) {
      console.error('No GL accounts found')
      return
    }
    
    console.log(`Found ${glAccounts.length} GL accounts`)
    
    let updateCount = 0
    
    // Update each account's metadata to include parent_account
    for (const account of glAccounts) {
      const parentCode = hierarchyMap[account.entity_code]
      
      if (parentCode) {
        const currentMetadata = account.metadata || {}
        const updatedMetadata = {
          ...currentMetadata,
          parent_account: parentCode
        }
        
        const { error } = await supabase
          .from('core_entities')
          .update({ metadata: updatedMetadata })
          .eq('id', account.id)
        
        if (!error) {
          updateCount++
          if (updateCount % 20 === 0) {
            console.log(`Updated ${updateCount} accounts...`)
          }
        } else {
          console.error(`Error updating ${account.entity_code}:`, error.message)
        }
      }
    }
    
    console.log(`\n‚úÖ Updated ${updateCount} GL accounts with parent metadata`)
    
  } catch (error) {
    console.error('Error:', error)
  }
}

updateParentMetadata().catch(console.error)