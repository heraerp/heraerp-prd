{
  "hera_guardrails": {
    "version": "2.0.0",
    "updated_at": "2025-09-29",
    "scope": {
      "sacred_tables": [
        "core_organizations",
        "core_entities",
        "core_dynamic_data",
        "core_relationships",
        "universal_transactions",
        "universal_transaction_lines"
      ],
      "severity_levels": ["error", "warn", "info"]
    },
    "hard_blocks": [
      {
        "id": "TABLE-ONLY-6",
        "description": "Only the six sacred tables may be created/altered; no new business tables.",
        "applies_to": ["sql.ddl"],
        "match_forbid_regex": "CREATE\\s+TABLE\\s+(?!core_|universal_)",
        "severity": "error",
        "autofix": { "action": "reject" }
      },
      {
        "id": "DDL-FORBID-BUSINESS-ADD-COLUMN",
        "description": "No business-specific columns on sacred tables; use core_dynamic_data.",
        "applies_to": ["sql.ddl.alter"],
        "match_regex": "ALTER\\s+TABLE\\s+(core_|universal_)[a-z_]+\\s+ADD\\s+COLUMN\\s+(?<col>[a-z_]+)\\s+(?<type>[^,;\\s]+)",
        "severity": "error",
        "autofix": { "action": "suggest_route", "params": { "route": "core_dynamic_data" } }
      }
    ],
    "multi_tenancy": {
      "rules": [
        {
          "id": "ORG-FILTER-REQUIRED",
          "description": "All reads/writes must include organization_id.",
          "applies_to": ["sql.dml.select","sql.dml.insert","sql.dml.update","sql.dml.delete","api.payload"],
          "validators": [
            { "type": "sql_where_contains", "value": "organization_id" },
            { "type": "json_path_required", "value": "$.organization_id" }
          ],
          "severity": "error",
          "autofix": { "action": "inject_filter", "params": { "clause": "organization_id = :current_org_id" } }
        }
      ]
    },
    "smart_code": {
      "pattern": "^HERA\\.[A-Z0-9]{3,15}(?:\\.[A-Z0-9_]{2,30}){3,8}\\.v[0-9]+$",
      "required_on_tables": [
        "core_entities",
        "core_dynamic_data",
        "core_relationships",
        "universal_transactions",
        "universal_transaction_lines"
      ],
      "rules": [
        {
          "id": "SMARTCODE-PRESENT",
          "description": "smart_code must exist and match the global pattern.",
          "applies_to": ["db.row","api.payload"],
          "validators": [
            { "type": "column_required", "value": "smart_code" },
            { "type": "regex", "column": "smart_code", "value": "^HERA\\.[A-Z0-9]{3,15}(?:\\.[A-Z0-9_]{2,30}){3,8}\\.v[0-9]+$" }
          ],
          "severity": "error"
        }
      ]
    },
    "transactions": {
      "header_rules": [
        {
          "id": "TXN-HEADER-REQUIRED-FIELDS",
          "description": "universal_transactions must have org, type, smart_code.",
          "applies_to": ["universal_transactions","api.payload"],
          "validators": [
            { "type": "column_required", "value": "organization_id" },
            { "type": "column_required", "value": "transaction_type" },
            { "type": "column_required", "value": "smart_code" }
          ],
          "severity": "error"
        }
      ],
      "line_rules": [
        {
          "id": "TXN-LINE-REQUIRED",
          "description": "Each line must have org, transaction_id, line_number, line_type, smart_code.",
          "applies_to": ["universal_transaction_lines","api.payload"],
          "validators": [
            { "type": "column_required", "value": "organization_id" },
            { "type": "column_required", "value": "transaction_id" },
            { "type": "column_required", "value": "line_number" },
            { "type": "column_required", "value": "line_type" },
            { "type": "column_required", "value": "smart_code" }
          ],
          "severity": "error"
        },
        {
          "id": "GL-BALANCED",
          "description": "GL transactions must balance per currency (sum debits == sum credits).",
          "applies_to": ["universal_transaction_lines"],
          "when": { "smart_code_contains_any": [".GL.", ".GL.LINE."] },
          "validators": [{ "type": "balanced_debits_credits" }],
          "severity": "error"
        }
      ]
    }
  }
}
