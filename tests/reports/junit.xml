<testsuites id="" name="" tests="390" failures="13" skipped="377" errors="0" time="33.882727">
<testsuite name="api/icecream/entities.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="6" failures="6" skipped="0" time="0" errors="0">
<testcase name="Ice Cream Module - Entity CRUD Operations › Customer Management › should create a new ice cream customer" classname="api/icecream/entities.spec.ts" time="0">
<failure message="entities.spec.ts:8:9 should create a new ice cream customer" type="FAILURE">
<![CDATA[  [chromium] › api/icecream/entities.spec.ts:8:9 › Ice Cream Module - Entity CRUD Operations › Customer Management › should create a new ice cream customer 

    TypeError: _apiFixtures.test.cleanup is not a function

      125 |     })
      126 |     
    > 127 |     test.cleanup(async ({ supabaseClient }) => {
          |          ^
      128 |       if (productId) {
      129 |         await supabaseClient.delete('core_entities', productId)
      130 |       }
        at /Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/entities.spec.ts:127:10
        at /Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/entities.spec.ts:76:8
        at Object.<anonymous> (/Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/entities.spec.ts:4:6)
]]>
</failure>
</testcase>
<testcase name="Ice Cream Module - Entity CRUD Operations › Customer Management › should update customer credit limit via dynamic data" classname="api/icecream/entities.spec.ts" time="0">
<failure message="entities.spec.ts:30:9 should update customer credit limit via dynamic data" type="FAILURE">
<![CDATA[  [chromium] › api/icecream/entities.spec.ts:30:9 › Ice Cream Module - Entity CRUD Operations › Customer Management › should update customer credit limit via dynamic data 

    TypeError: _apiFixtures.test.cleanup is not a function

      125 |     })
      126 |     
    > 127 |     test.cleanup(async ({ supabaseClient }) => {
          |          ^
      128 |       if (productId) {
      129 |         await supabaseClient.delete('core_entities', productId)
      130 |       }
        at /Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/entities.spec.ts:127:10
        at /Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/entities.spec.ts:76:8
        at Object.<anonymous> (/Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/entities.spec.ts:4:6)
]]>
</failure>
</testcase>
<testcase name="Ice Cream Module - Entity CRUD Operations › Customer Management › should query customer with dynamic data" classname="api/icecream/entities.spec.ts" time="0">
<failure message="entities.spec.ts:47:9 should query customer with dynamic data" type="FAILURE">
<![CDATA[  [chromium] › api/icecream/entities.spec.ts:47:9 › Ice Cream Module - Entity CRUD Operations › Customer Management › should query customer with dynamic data 

    TypeError: _apiFixtures.test.cleanup is not a function

      125 |     })
      126 |     
    > 127 |     test.cleanup(async ({ supabaseClient }) => {
          |          ^
      128 |       if (productId) {
      129 |         await supabaseClient.delete('core_entities', productId)
      130 |       }
        at /Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/entities.spec.ts:127:10
        at /Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/entities.spec.ts:76:8
        at Object.<anonymous> (/Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/entities.spec.ts:4:6)
]]>
</failure>
</testcase>
<testcase name="Ice Cream Module - Entity CRUD Operations › Customer Management › should delete test customer" classname="api/icecream/entities.spec.ts" time="0">
<failure message="entities.spec.ts:66:9 should delete test customer" type="FAILURE">
<![CDATA[  [chromium] › api/icecream/entities.spec.ts:66:9 › Ice Cream Module - Entity CRUD Operations › Customer Management › should delete test customer 

    TypeError: _apiFixtures.test.cleanup is not a function

      125 |     })
      126 |     
    > 127 |     test.cleanup(async ({ supabaseClient }) => {
          |          ^
      128 |       if (productId) {
      129 |         await supabaseClient.delete('core_entities', productId)
      130 |       }
        at /Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/entities.spec.ts:127:10
        at /Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/entities.spec.ts:76:8
        at Object.<anonymous> (/Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/entities.spec.ts:4:6)
]]>
</failure>
</testcase>
<testcase name="Ice Cream Module - Entity CRUD Operations › Product Management › should create ice cream product with temperature requirements" classname="api/icecream/entities.spec.ts" time="0">
<failure message="entities.spec.ts:79:9 should create ice cream product with temperature requirements" type="FAILURE">
<![CDATA[  [chromium] › api/icecream/entities.spec.ts:79:9 › Ice Cream Module - Entity CRUD Operations › Product Management › should create ice cream product with temperature requirements 

    TypeError: _apiFixtures.test.cleanup is not a function

      125 |     })
      126 |     
    > 127 |     test.cleanup(async ({ supabaseClient }) => {
          |          ^
      128 |       if (productId) {
      129 |         await supabaseClient.delete('core_entities', productId)
      130 |       }
        at /Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/entities.spec.ts:127:10
        at /Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/entities.spec.ts:76:8
        at Object.<anonymous> (/Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/entities.spec.ts:4:6)
]]>
</failure>
</testcase>
<testcase name="Ice Cream Module - Entity CRUD Operations › Product Management › should create product batch tracking relationship" classname="api/icecream/entities.spec.ts" time="0">
<failure message="entities.spec.ts:108:9 should create product batch tracking relationship" type="FAILURE">
<![CDATA[  [chromium] › api/icecream/entities.spec.ts:108:9 › Ice Cream Module - Entity CRUD Operations › Product Management › should create product batch tracking relationship 

    TypeError: _apiFixtures.test.cleanup is not a function

      125 |     })
      126 |     
    > 127 |     test.cleanup(async ({ supabaseClient }) => {
          |          ^
      128 |       if (productId) {
      129 |         await supabaseClient.delete('core_entities', productId)
      130 |       }
        at /Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/entities.spec.ts:127:10
        at /Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/entities.spec.ts:76:8
        at Object.<anonymous> (/Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/entities.spec.ts:4:6)
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="api/icecream/multi-tenancy.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="4" failures="4" skipped="0" time="2.061" errors="0">
<testcase name="Multi-Tenancy Isolation Tests › should prevent cross-organization entity access" classname="api/icecream/multi-tenancy.spec.ts" time="0.419">
<failure message="multi-tenancy.spec.ts:8:7 should prevent cross-organization entity access" type="FAILURE">
<![CDATA[  [chromium] › api/icecream/multi-tenancy.spec.ts:8:7 › Multi-Tenancy Isolation Tests › should prevent cross-organization entity access 

    TypeError: Cannot read properties of undefined (reading 'id')

      15 |     })
      16 |     
    > 17 |     iceCreanEntityId = iceCreanEntity.data[0].id
         |                                               ^
      18 |     
      19 |     // Create entity in salon org
      20 |     const salonEntity = await supabaseClient.insert('core_entities', {
        at /Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/multi-tenancy.spec.ts:17:47

    attachment #1: trace (application/zip) ─────────────────────────────────────────────────────────
    ../test-results/api-icecream-multi-tenancy-b329c--organization-entity-access-chromium/trace.zip
    Usage:

        npx playwright show-trace ../test-results/api-icecream-multi-tenancy-b329c--organization-entity-access-chromium/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/api-icecream-multi-tenancy-b329c--organization-entity-access-chromium/trace.zip]]
]]>
</system-out>
</testcase>
<testcase name="Multi-Tenancy Isolation Tests › should prevent cross-organization transaction access" classname="api/icecream/multi-tenancy.spec.ts" time="0.628">
<failure message="multi-tenancy.spec.ts:50:7 should prevent cross-organization transaction access" type="FAILURE">
<![CDATA[  [chromium] › api/icecream/multi-tenancy.spec.ts:50:7 › Multi-Tenancy Isolation Tests › should prevent cross-organization transaction access 

    Error: expect(received).toContain(expected) // indexOf

    Expected value: "ICE-TXN-TEST-1757447359360"
    Received array: []

      73 |     
      74 |     const iceCreanTxnCodes = iceCreanTxns.map(t => t.transaction_code)
    > 75 |     expect(iceCreanTxnCodes).toContain(`ICE-TXN-${testIds.uniqueId}`)
         |                              ^
      76 |     expect(iceCreanTxnCodes).not.toContain(`SALON-TXN-${testIds.uniqueId}`)
      77 |     
      78 |     // Cleanup
        at /Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/multi-tenancy.spec.ts:75:30

    attachment #1: trace (application/zip) ─────────────────────────────────────────────────────────
    ../test-results/api-icecream-multi-tenancy-002f3-nization-transaction-access-chromium/trace.zip
    Usage:

        npx playwright show-trace ../test-results/api-icecream-multi-tenancy-002f3-nization-transaction-access-chromium/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/api-icecream-multi-tenancy-002f3-nization-transaction-access-chromium/trace.zip]]
]]>
</system-out>
</testcase>
<testcase name="Multi-Tenancy Isolation Tests › should prevent cross-organization relationship access" classname="api/icecream/multi-tenancy.spec.ts" time="0.427">
<failure message="multi-tenancy.spec.ts:83:7 should prevent cross-organization relationship access" type="FAILURE">
<![CDATA[  [chromium] › api/icecream/multi-tenancy.spec.ts:83:7 › Multi-Tenancy Isolation Tests › should prevent cross-organization relationship access 

    Error: expect(received).toContain(expected) // indexOf

    Expected value: "HERA.TEST.REL.ICE.TEST-1757447360345"
    Received array: []

       97 |     
       98 |     const relSmartCodes = relationships.map(r => r.smart_code)
    >  99 |     expect(relSmartCodes).toContain(`HERA.TEST.REL.ICE.${testIds.uniqueId}`)
          |                           ^
      100 |     
      101 |     // Cleanup
      102 |     await supabaseClient.delete('core_relationships', iceCreanRel.data[0].id)
        at /Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/multi-tenancy.spec.ts:99:27

    attachment #1: trace (application/zip) ─────────────────────────────────────────────────────────
    ../test-results/api-icecream-multi-tenancy-ae206-ization-relationship-access-chromium/trace.zip
    Usage:

        npx playwright show-trace ../test-results/api-icecream-multi-tenancy-ae206-ization-relationship-access-chromium/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/api-icecream-multi-tenancy-ae206-ization-relationship-access-chromium/trace.zip]]
]]>
</system-out>
</testcase>
<testcase name="Multi-Tenancy Isolation Tests › should prevent cross-organization dynamic data access" classname="api/icecream/multi-tenancy.spec.ts" time="0.587">
<failure message="multi-tenancy.spec.ts:105:7 should prevent cross-organization dynamic data access" type="FAILURE">
<![CDATA[  [chromium] › api/icecream/multi-tenancy.spec.ts:105:7 › Multi-Tenancy Isolation Tests › should prevent cross-organization dynamic data access 

    TypeError: iceCreanDynData.map is not a function

      125 |     })
      126 |     
    > 127 |     const iceCreanValues = iceCreanDynData.map(d => d.field_value_text)
          |                                            ^
      128 |     expect(iceCreanValues).toContain(`Ice Cream Data ${testIds.uniqueId}`)
      129 |     expect(iceCreanValues).not.toContain(`Salon Data ${testIds.uniqueId}`)
      130 |     
        at /Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/multi-tenancy.spec.ts:127:44

    attachment #1: trace (application/zip) ─────────────────────────────────────────────────────────
    ../test-results/api-icecream-multi-tenancy-3af88-ization-dynamic-data-access-chromium/trace.zip
    Usage:

        npx playwright show-trace ../test-results/api-icecream-multi-tenancy-3af88-ization-dynamic-data-access-chromium/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../../test-results/api-icecream-multi-tenancy-3af88-ization-dynamic-data-access-chromium/trace.zip]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="api/icecream/transactions.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="3" failures="3" skipped="0" time="0" errors="0">
<testcase name="Ice Cream Module - Transaction CRUD Operations › Production Batch Management › should create production batch with efficiency tracking" classname="api/icecream/transactions.spec.ts" time="0">
<failure message="transactions.spec.ts:43:9 should create production batch with efficiency tracking" type="FAILURE">
<![CDATA[  [chromium] › api/icecream/transactions.spec.ts:43:9 › Ice Cream Module - Transaction CRUD Operations › Production Batch Management › should create production batch with efficiency tracking 

    TypeError: _apiFixtures.test.cleanup is not a function

      116 |     })
      117 |     
    > 118 |     test.cleanup(async ({ supabaseClient }) => {
          |          ^
      119 |       if (batchId) {
      120 |         await supabaseClient.delete('universal_transactions', batchId)
      121 |       }
        at /Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/transactions.spec.ts:118:10
        at /Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/transactions.spec.ts:40:8
        at Object.<anonymous> (/Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/transactions.spec.ts:4:6)
]]>
</failure>
</testcase>
<testcase name="Ice Cream Module - Transaction CRUD Operations › Production Batch Management › should add production line items" classname="api/icecream/transactions.spec.ts" time="0">
<failure message="transactions.spec.ts:78:9 should add production line items" type="FAILURE">
<![CDATA[  [chromium] › api/icecream/transactions.spec.ts:78:9 › Ice Cream Module - Transaction CRUD Operations › Production Batch Management › should add production line items 

    TypeError: _apiFixtures.test.cleanup is not a function

      116 |     })
      117 |     
    > 118 |     test.cleanup(async ({ supabaseClient }) => {
          |          ^
      119 |       if (batchId) {
      120 |         await supabaseClient.delete('universal_transactions', batchId)
      121 |       }
        at /Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/transactions.spec.ts:118:10
        at /Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/transactions.spec.ts:40:8
        at Object.<anonymous> (/Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/transactions.spec.ts:4:6)
]]>
</failure>
</testcase>
<testcase name="Ice Cream Module - Transaction CRUD Operations › Production Batch Management › should update batch status to completed" classname="api/icecream/transactions.spec.ts" time="0">
<failure message="transactions.spec.ts:102:9 should update batch status to completed" type="FAILURE">
<![CDATA[  [chromium] › api/icecream/transactions.spec.ts:102:9 › Ice Cream Module - Transaction CRUD Operations › Production Batch Management › should update batch status to completed 

    TypeError: _apiFixtures.test.cleanup is not a function

      116 |     })
      117 |     
    > 118 |     test.cleanup(async ({ supabaseClient }) => {
          |          ^
      119 |       if (batchId) {
      120 |         await supabaseClient.delete('universal_transactions', batchId)
      121 |       }
        at /Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/transactions.spec.ts:118:10
        at /Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/transactions.spec.ts:40:8
        at Object.<anonymous> (/Users/san/Documents/PRD/heraerp-prd/tests/api/icecream/transactions.spec.ts:4:6)
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="e2e/auth/login.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="4" failures="0" skipped="4" time="0" errors="0">
<testcase name="HERA Authentication Flow › should display login page correctly" classname="e2e/auth/login.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Authentication Flow › should show validation errors for empty form" classname="e2e/auth/login.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Authentication Flow › should login successfully with valid credentials" classname="e2e/auth/login.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Authentication Flow › should navigate to signup page" classname="e2e/auth/login.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/furniture/manufacturing-workflow.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Furniture Module - Manufacturing Workflow › Complete manufacturing workflow - Sales order → Production order → Inventory" classname="e2e/furniture/manufacturing-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Furniture Module - Manufacturing Workflow › Production order with material shortage handling" classname="e2e/furniture/manufacturing-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/furniture/order-to-delivery-cycle.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Furniture Module - Order to Delivery Cycle › Complete order-to-delivery cycle with all business processes" classname="e2e/furniture/order-to-delivery-cycle.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/furniture/product-setup-flow.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="Furniture Module - Product Setup Flow › Complete product setup flow - Create product → Add BOM → Setup routing → Verify costing" classname="e2e/furniture/product-setup-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Furniture Module - Product Setup Flow › Product setup with BOM import" classname="e2e/furniture/product-setup-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Furniture Module - Product Setup Flow › Product setup with routing copy" classname="e2e/furniture/product-setup-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/furniture/ucr-business-rules.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Furniture Module - UCR Business Rules › UCR validation for minimum order quantity" classname="e2e/furniture/ucr-business-rules.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Furniture Module - UCR Business Rules › UCR validation for maximum discount limit" classname="e2e/furniture/ucr-business-rules.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Furniture Module - UCR Business Rules › UCR validation for customer credit limit" classname="e2e/furniture/ucr-business-rules.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Furniture Module - UCR Business Rules › UCR API validation" classname="e2e/furniture/ucr-business-rules.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Furniture Module - UCR Business Rules › Complex UCR rule with multiple conditions" classname="e2e/furniture/ucr-business-rules.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Furniture Module - UCR Business Rules › UCR rule activation and deactivation" classname="e2e/furniture/ucr-business-rules.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/icecream/smoke.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="7" failures="0" skipped="7" time="0" errors="0">
<testcase name="Ice Cream Module - UI Smoke Tests › should load ice cream dashboard" classname="e2e/icecream/smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Ice Cream Module - UI Smoke Tests › should navigate to production page" classname="e2e/icecream/smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Ice Cream Module - UI Smoke Tests › should navigate to inventory page" classname="e2e/icecream/smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Ice Cream Module - UI Smoke Tests › should navigate to financial page" classname="e2e/icecream/smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Ice Cream Module - UI Smoke Tests › should display real-time metrics" classname="e2e/icecream/smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Ice Cream Module - UI Smoke Tests › should open apps modal" classname="e2e/icecream/smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Ice Cream Module - UI Smoke Tests › should handle mobile responsive layout" classname="e2e/icecream/smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/mcp-chat/chat-interaction.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="5" failures="0" skipped="5" time="0" errors="0">
<testcase name="MCP Chat Interface › should display chat interface correctly" classname="e2e/mcp-chat/chat-interaction.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="MCP Chat Interface › should send and receive messages" classname="e2e/mcp-chat/chat-interaction.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="MCP Chat Interface › should handle create customer command" classname="e2e/mcp-chat/chat-interaction.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="MCP Chat Interface › should show example prompts on first load" classname="e2e/mcp-chat/chat-interaction.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="MCP Chat Interface › should handle keyboard shortcuts" classname="e2e/mcp-chat/chat-interaction.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/mobile/mobile-responsive.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="Mobile Responsiveness › should display mobile menu" classname="e2e/mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › should handle touch interactions in chat" classname="e2e/mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mobile Responsiveness › should scroll properly on mobile" classname="e2e/mobile/mobile-responsive.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/multi-tenant/module-entitlements.e2e.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="7" failures="0" skipped="7" time="0" errors="0">
<testcase name="Module Entitlements › module access based on entitlements" classname="e2e/multi-tenant/module-entitlements.e2e.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Module Entitlements › module navigation menu reflects entitlements" classname="e2e/multi-tenant/module-entitlements.e2e.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Module Entitlements › real-time module entitlement updates" classname="e2e/multi-tenant/module-entitlements.e2e.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Module Entitlements › module usage tracking" classname="e2e/multi-tenant/module-entitlements.e2e.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Module Entitlements › module-specific permissions within entitled modules" classname="e2e/multi-tenant/module-entitlements.e2e.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Module Entitlements › module dependencies and bundling" classname="e2e/multi-tenant/module-entitlements.e2e.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Module Entitlements › module access audit trail" classname="e2e/multi-tenant/module-entitlements.e2e.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/multi-tenant/subdomain-routing.e2e.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Subdomain Routing › subdomain routing in development mode" classname="e2e/multi-tenant/subdomain-routing.e2e.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Subdomain Routing › subdomain routing preserves context during navigation" classname="e2e/multi-tenant/subdomain-routing.e2e.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Subdomain Routing › invalid subdomain handling" classname="e2e/multi-tenant/subdomain-routing.e2e.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Subdomain Routing › subdomain middleware headers" classname="e2e/multi-tenant/subdomain-routing.e2e.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Subdomain Routing › cross-origin subdomain security" classname="e2e/multi-tenant/subdomain-routing.e2e.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Subdomain Routing › production subdomain simulation" classname="e2e/multi-tenant/subdomain-routing.e2e.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Subdomain Routing › subdomain-specific theme and branding" classname="e2e/multi-tenant/subdomain-routing.e2e.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Subdomain Routing › API rate limiting per organization" classname="e2e/multi-tenant/subdomain-routing.e2e.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/multi-tenant/tenant-provisioning.e2e.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="5" failures="0" skipped="5" time="0" errors="0">
<testcase name="Multi-Tenant Provisioning Flow › complete tenant provisioning flow" classname="e2e/multi-tenant/tenant-provisioning.e2e.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Multi-Tenant Provisioning Flow › subdomain availability check" classname="e2e/multi-tenant/tenant-provisioning.e2e.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Multi-Tenant Provisioning Flow › module entitlement enforcement" classname="e2e/multi-tenant/tenant-provisioning.e2e.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Multi-Tenant Provisioning Flow › organization switching" classname="e2e/multi-tenant/tenant-provisioning.e2e.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Multi-Tenant Provisioning Flow › multi-tenant data isolation" classname="e2e/multi-tenant/tenant-provisioning.e2e.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/organization/organization-flow.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="Multi-Organization Flow › should create new organization" classname="e2e/organization/organization-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Multi-Organization Flow › should select and install apps" classname="e2e/organization/organization-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Multi-Organization Flow › should switch between organizations" classname="e2e/organization/organization-flow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/performance/load-test.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="Performance Tests › should load dashboard within acceptable time" classname="e2e/performance/load-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should handle rapid interactions" classname="e2e/performance/load-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should handle large data sets" classname="e2e/performance/load-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/procurement/mario-procurement-dashboard.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="Mario Restaurant - Procurement Dashboard › should display procurement dashboard overview" classname="e2e/procurement/mario-procurement-dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Procurement Dashboard › should have functional navigation tabs" classname="e2e/procurement/mario-procurement-dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Procurement Dashboard › should display quick actions with proper styling" classname="e2e/procurement/mario-procurement-dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Procurement Dashboard › should show recent activity feed" classname="e2e/procurement/mario-procurement-dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Procurement Dashboard › should display HERA architecture information" classname="e2e/procurement/mario-procurement-dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Procurement Dashboard › should navigate to suppliers section" classname="e2e/procurement/mario-procurement-dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Procurement Dashboard › should navigate to products section" classname="e2e/procurement/mario-procurement-dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Procurement Dashboard › should navigate to purchase orders section" classname="e2e/procurement/mario-procurement-dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Procurement Dashboard › should handle responsive design" classname="e2e/procurement/mario-procurement-dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Procurement Dashboard › should validate accessibility features" classname="e2e/procurement/mario-procurement-dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Procurement Dashboard › should have proper loading states" classname="e2e/procurement/mario-procurement-dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/procurement/mario-procurement-workflow.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Mario Restaurant - Complete Procurement Workflow › should complete full procurement workflow - Dashboard to Purchase Order" classname="e2e/procurement/mario-procurement-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Complete Procurement Workflow › should validate HERA universal architecture messaging" classname="e2e/procurement/mario-procurement-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Complete Procurement Workflow › should handle procurement navigation consistency" classname="e2e/procurement/mario-procurement-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Complete Procurement Workflow › should display consistent Mario restaurant branding" classname="e2e/procurement/mario-procurement-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Complete Procurement Workflow › should handle procurement data persistence across navigation" classname="e2e/procurement/mario-procurement-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Complete Procurement Workflow › should validate procurement system performance" classname="e2e/procurement/mario-procurement-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Complete Procurement Workflow › should handle procurement error states gracefully" classname="e2e/procurement/mario-procurement-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Complete Procurement Workflow › should validate procurement accessibility features" classname="e2e/procurement/mario-procurement-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Complete Procurement Workflow › should integrate with restaurant workflow" classname="e2e/procurement/mario-procurement-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Complete Procurement Workflow › should demonstrate universal architecture scalability" classname="e2e/procurement/mario-procurement-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/procurement/mario-products.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="16" failures="0" skipped="16" time="0" errors="0">
<testcase name="Mario Restaurant - Product Catalog Management › should display products management interface" classname="e2e/procurement/mario-products.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Product Catalog Management › should handle product catalog display" classname="e2e/procurement/mario-products.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Product Catalog Management › should display product inventory information" classname="e2e/procurement/mario-products.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Product Catalog Management › should show product categories and classification" classname="e2e/procurement/mario-products.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Product Catalog Management › should handle product search and filtering" classname="e2e/procurement/mario-products.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Product Catalog Management › should display product pricing information" classname="e2e/procurement/mario-products.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Product Catalog Management › should handle add new product functionality" classname="e2e/procurement/mario-products.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Product Catalog Management › should display product specifications" classname="e2e/procurement/mario-products.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Product Catalog Management › should show supplier relationships" classname="e2e/procurement/mario-products.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Product Catalog Management › should handle product status management" classname="e2e/procurement/mario-products.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Product Catalog Management › should display stock level warnings" classname="e2e/procurement/mario-products.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Product Catalog Management › should handle product image management" classname="e2e/procurement/mario-products.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Product Catalog Management › should show product analytics and metrics" classname="e2e/procurement/mario-products.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Product Catalog Management › should handle bulk product operations" classname="e2e/procurement/mario-products.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Product Catalog Management › should validate responsive design for products" classname="e2e/procurement/mario-products.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Product Catalog Management › should navigate to other procurement sections" classname="e2e/procurement/mario-products.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/procurement/mario-purchase-orders.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="17" failures="0" skipped="17" time="0" errors="0">
<testcase name="Mario Restaurant - Purchase Orders Management › should display purchase orders management interface" classname="e2e/procurement/mario-purchase-orders.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Purchase Orders Management › should handle purchase orders list display" classname="e2e/procurement/mario-purchase-orders.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Purchase Orders Management › should display purchase order status tracking" classname="e2e/procurement/mario-purchase-orders.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Purchase Orders Management › should show purchase order financial information" classname="e2e/procurement/mario-purchase-orders.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Purchase Orders Management › should handle purchase order creation workflow" classname="e2e/procurement/mario-purchase-orders.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Purchase Orders Management › should display supplier information in POs" classname="e2e/procurement/mario-purchase-orders.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Purchase Orders Management › should handle purchase order approval workflow" classname="e2e/procurement/mario-purchase-orders.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Purchase Orders Management › should show purchase order line items" classname="e2e/procurement/mario-purchase-orders.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Purchase Orders Management › should handle purchase order search and filtering" classname="e2e/procurement/mario-purchase-orders.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Purchase Orders Management › should display purchase order dates and timelines" classname="e2e/procurement/mario-purchase-orders.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Purchase Orders Management › should handle purchase order export and reporting" classname="e2e/procurement/mario-purchase-orders.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Purchase Orders Management › should show purchase order history and audit trail" classname="e2e/procurement/mario-purchase-orders.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Purchase Orders Management › should handle purchase order notifications" classname="e2e/procurement/mario-purchase-orders.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Purchase Orders Management › should validate purchase order permissions" classname="e2e/procurement/mario-purchase-orders.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Purchase Orders Management › should handle responsive design for purchase orders" classname="e2e/procurement/mario-purchase-orders.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Purchase Orders Management › should validate HERA universal transactions architecture" classname="e2e/procurement/mario-purchase-orders.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Purchase Orders Management › should navigate between procurement sections" classname="e2e/procurement/mario-purchase-orders.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/procurement/mario-suppliers.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Mario Restaurant - Supplier Management › should display suppliers management interface" classname="e2e/procurement/mario-suppliers.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Supplier Management › should handle suppliers list display" classname="e2e/procurement/mario-suppliers.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Supplier Management › should display supplier cards or table" classname="e2e/procurement/mario-suppliers.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Supplier Management › should handle supplier search functionality" classname="e2e/procurement/mario-suppliers.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Supplier Management › should handle supplier status filtering" classname="e2e/procurement/mario-suppliers.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Supplier Management › should display supplier contact information" classname="e2e/procurement/mario-suppliers.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Supplier Management › should handle add new supplier action" classname="e2e/procurement/mario-suppliers.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Supplier Management › should display supplier metrics and statistics" classname="e2e/procurement/mario-suppliers.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Supplier Management › should handle supplier actions menu" classname="e2e/procurement/mario-suppliers.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Supplier Management › should validate supplier status badges" classname="e2e/procurement/mario-suppliers.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Supplier Management › should handle supplier data export" classname="e2e/procurement/mario-suppliers.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Supplier Management › should display supplier performance metrics" classname="e2e/procurement/mario-suppliers.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Supplier Management › should handle responsive design for suppliers" classname="e2e/procurement/mario-suppliers.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Mario Restaurant - Supplier Management › should navigate back to dashboard" classname="e2e/procurement/mario-suppliers.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/readiness-questionnaire-mcp.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="7" failures="0" skipped="7" time="0" errors="0">
<testcase name="HERA Readiness Questionnaire - MCP E2E Tests › should complete questionnaire using MCP intelligence for restaurant business" classname="e2e/readiness-questionnaire-mcp.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Readiness Questionnaire - MCP E2E Tests › should complete questionnaire using MCP intelligence for healthcare business" classname="e2e/readiness-questionnaire-mcp.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Readiness Questionnaire - MCP E2E Tests › should validate answers are saved to universal API" classname="e2e/readiness-questionnaire-mcp.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Readiness Questionnaire - MCP E2E Tests › should handle validation errors gracefully" classname="e2e/readiness-questionnaire-mcp.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Readiness Questionnaire - MCP E2E Tests › should support navigation back and forth" classname="e2e/readiness-questionnaire-mcp.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="MCP Integration Tests › should integrate with HERA MCP server for intelligent form completion" classname="e2e/readiness-questionnaire-mcp.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="MCP Integration Tests › should use MCP for business intelligence in form completion" classname="e2e/readiness-questionnaire-mcp.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/appointments.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="13" failures="0" skipped="13" time="0" errors="0">
<testcase name="Salon Appointments Management › should display appointments page with correct elements" classname="e2e/salon/appointments.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Appointments Management › should display appointment cards with correct information" classname="e2e/salon/appointments.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Appointments Management › should filter appointments by search term" classname="e2e/salon/appointments.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Appointments Management › should navigate to new appointment page" classname="e2e/salon/appointments.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Appointments Management › should show different status badges" classname="e2e/salon/appointments.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Appointments Management › should handle check-in action for confirmed appointments" classname="e2e/salon/appointments.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Appointments Management › should handle cancel action for confirmed appointments" classname="e2e/salon/appointments.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Appointments Management › should navigate between tabs" classname="e2e/salon/appointments.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Appointments Management › should display empty state when no appointments" classname="e2e/salon/appointments.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Appointments Management › should navigate back to dashboard" classname="e2e/salon/appointments.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Appointments Management › should display appointment time in correct format" classname="e2e/salon/appointments.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Appointments Management › should display price with currency" classname="e2e/salon/appointments.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Appointments Management › should handle date navigation" classname="e2e/salon/appointments.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/client-management-complete.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="12" failures="0" skipped="12" time="0" errors="0">
<testcase name="Client Management - Complete Test Suite › CM-001: Navigate to Clients page successfully" classname="e2e/salon/client-management-complete.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Complete Test Suite › CM-002: Clients page displays correctly" classname="e2e/salon/client-management-complete.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Complete Test Suite › CM-003: Search functionality exists" classname="e2e/salon/client-management-complete.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Complete Test Suite › CM-004: Add new client button exists and is clickable" classname="e2e/salon/client-management-complete.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Complete Test Suite › CM-005: Client list/table displays data" classname="e2e/salon/client-management-complete.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Complete Test Suite › CM-006: Client details are viewable" classname="e2e/salon/client-management-complete.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Complete Test Suite › CM-007: Filter/Sort options available" classname="e2e/salon/client-management-complete.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Complete Test Suite › CM-008: Pagination works if multiple pages" classname="e2e/salon/client-management-complete.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Complete Test Suite › CM-009: Export/Import functionality" classname="e2e/salon/client-management-complete.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Complete Test Suite › CM-010: Responsive design on mobile" classname="e2e/salon/client-management-complete.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Performance Tests › CM-P001: Page loads within 3 seconds" classname="e2e/salon/client-management-complete.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Performance Tests › CM-P002: Search response time" classname="e2e/salon/client-management-complete.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/client-management-final.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="13" failures="0" skipped="13" time="0" errors="0">
<testcase name="Client Management - Complete Suite › CM-001: Navigate to Clients page" classname="e2e/salon/client-management-final.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Complete Suite › CM-002: Clients page displays main elements" classname="e2e/salon/client-management-final.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Complete Suite › CM-003: Search functionality" classname="e2e/salon/client-management-final.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Complete Suite › CM-004: Add Client dialog" classname="e2e/salon/client-management-final.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Complete Suite › CM-005: Statistics display" classname="e2e/salon/client-management-final.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Complete Suite › CM-006: Client display (cards or empty state)" classname="e2e/salon/client-management-final.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Complete Suite › CM-007: Export functionality" classname="e2e/salon/client-management-final.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Complete Suite › CM-008: Filter functionality" classname="e2e/salon/client-management-final.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Complete Suite › CM-009: Form validation" classname="e2e/salon/client-management-final.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Complete Suite › CM-010: Responsive mobile view" classname="e2e/salon/client-management-final.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Performance › Page load performance" classname="e2e/salon/client-management-final.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Performance › Navigation performance" classname="e2e/salon/client-management-final.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Performance › Search responsiveness" classname="e2e/salon/client-management-final.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/client-management-fixed.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="12" failures="0" skipped="12" time="0" errors="0">
<testcase name="Client Management - Fixed Tests › CM-001: Navigate to Clients page successfully" classname="e2e/salon/client-management-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Fixed Tests › CM-002: Clients page displays correctly" classname="e2e/salon/client-management-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Fixed Tests › CM-003: Search functionality exists and works" classname="e2e/salon/client-management-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Fixed Tests › CM-004: Add new client dialog opens" classname="e2e/salon/client-management-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Fixed Tests › CM-005: Statistics cards display correctly" classname="e2e/salon/client-management-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Fixed Tests › CM-006: Filter by status works" classname="e2e/salon/client-management-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Fixed Tests › CM-007: Export functionality exists" classname="e2e/salon/client-management-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Fixed Tests › CM-008: Client cards or empty state displays" classname="e2e/salon/client-management-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Fixed Tests › CM-009: Form validation works" classname="e2e/salon/client-management-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Fixed Tests › CM-010: Mobile responsive view" classname="e2e/salon/client-management-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Performance › CM-P001: Page loads within 3 seconds" classname="e2e/salon/client-management-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Performance › CM-P002: Search is responsive" classname="e2e/salon/client-management-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/client-management-production.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="12" failures="0" skipped="12" time="0" errors="0">
<testcase name="Client Management - Production Tests › ✅ CM-001: Navigate to Clients page" classname="e2e/salon/client-management-production.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Production Tests › ✅ CM-002: Main page elements load" classname="e2e/salon/client-management-production.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Production Tests › ✅ CM-003: Search input functionality" classname="e2e/salon/client-management-production.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Production Tests › ✅ CM-004: Add Client dialog functionality" classname="e2e/salon/client-management-production.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Production Tests › ✅ CM-005: Client data display" classname="e2e/salon/client-management-production.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Production Tests › ✅ CM-006: Export functionality exists" classname="e2e/salon/client-management-production.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Production Tests › ✅ CM-007: Filter options available" classname="e2e/salon/client-management-production.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Production Tests › ✅ CM-008: Form validation works" classname="e2e/salon/client-management-production.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Client Management - Production Tests › ✅ CM-009: Responsive design basics" classname="e2e/salon/client-management-production.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Benchmarks › ⚡ Page loads in reasonable time" classname="e2e/salon/client-management-production.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Benchmarks › ⚡ Navigation is responsive" classname="e2e/salon/client-management-production.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="🎯 Client Management Quick Validation" classname="e2e/salon/client-management-production.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/client-navigation-diagnostic.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Diagnose Clients Navigation" classname="e2e/salon/client-navigation-diagnostic.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/clients.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="16" failures="0" skipped="16" time="0" errors="0">
<testcase name="Salon Client Management › should display clients page with correct layout" classname="e2e/salon/clients.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Client Management › should display client cards with tier badges" classname="e2e/salon/clients.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Client Management › should search for clients" classname="e2e/salon/clients.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Client Management › should open add new client dialog" classname="e2e/salon/clients.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Client Management › should fill and submit new client form" classname="e2e/salon/clients.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Client Management › should switch between client tabs" classname="e2e/salon/clients.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Client Management › should view client details" classname="e2e/salon/clients.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Client Management › should edit client information" classname="e2e/salon/clients.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Client Management › should display client statistics correctly" classname="e2e/salon/clients.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Client Management › should handle import clients functionality" classname="e2e/salon/clients.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Client Management › should handle export clients functionality" classname="e2e/salon/clients.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Client Management › should refresh client list" classname="e2e/salon/clients.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Client Management › should display empty state when no clients match search" classname="e2e/salon/clients.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Client Management › should navigate back to dashboard" classname="e2e/salon/clients.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Client Management › should show tier progression information" classname="e2e/salon/clients.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Client Management › should validate phone number format in add client form" classname="e2e/salon/clients.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/comprehensive-salon.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="HERA Salon - Comprehensive Test Suite › Dashboard Tests › Dashboard loads with correct welcome message" classname="e2e/salon/comprehensive-salon.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Comprehensive Test Suite › Dashboard Tests › Quick Actions modal opens and contains all actions" classname="e2e/salon/comprehensive-salon.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Comprehensive Test Suite › Appointments Tests › Appointments page loads correctly" classname="e2e/salon/comprehensive-salon.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Comprehensive Test Suite › Appointments Tests › Can search appointments" classname="e2e/salon/comprehensive-salon.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Comprehensive Test Suite › Appointments Tests › Can create new appointment via quick action" classname="e2e/salon/comprehensive-salon.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Comprehensive Test Suite › Clients Tests › Clients page loads with list or grid" classname="e2e/salon/comprehensive-salon.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Comprehensive Test Suite › Clients Tests › New badge is visible on Clients navigation" classname="e2e/salon/comprehensive-salon.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Comprehensive Test Suite › Services Tests › Services page displays service categories" classname="e2e/salon/comprehensive-salon.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Comprehensive Test Suite › POS Tests › Navigate to POS and check for cart elements" classname="e2e/salon/comprehensive-salon.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Comprehensive Test Suite › Extended Apps Tests › Can access Finance app from More Apps" classname="e2e/salon/comprehensive-salon.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Comprehensive Test Suite › Extended Apps Tests › Can access Analytics app from More Apps" classname="e2e/salon/comprehensive-salon.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Comprehensive Test Suite › Mobile Responsiveness › Sidebar works on mobile viewport" classname="e2e/salon/comprehensive-salon.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Comprehensive Test Suite › Performance Tests › Page loads within acceptable time" classname="e2e/salon/comprehensive-salon.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Comprehensive Test Suite › Performance Tests › Navigation between pages is smooth" classname="e2e/salon/comprehensive-salon.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/customers-crud-operations.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="Customer CRUD Operations - Full Cycle › Complete CRUD cycle for customer" classname="e2e/salon/customers-crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer CRUD Operations - Full Cycle › Validate required fields" classname="e2e/salon/customers-crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer CRUD Operations - Full Cycle › Test customer quick actions" classname="e2e/salon/customers-crud-operations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/customers-crud.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Salon Customers CRUD Operations › should display customers list" classname="e2e/salon/customers-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Customers CRUD Operations › should search and filter customers" classname="e2e/salon/customers-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Customers CRUD Operations › should open customer detail modal" classname="e2e/salon/customers-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Customers CRUD Operations › should navigate between customer detail tabs" classname="e2e/salon/customers-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Customers CRUD Operations › should handle customer selection and bulk actions" classname="e2e/salon/customers-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Customers CRUD Operations › should display customer segments correctly" classname="e2e/salon/customers-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Customers CRUD Operations › should show customer value information" classname="e2e/salon/customers-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Customers CRUD Operations › should handle pagination" classname="e2e/salon/customers-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Customers CRUD Operations › should handle empty search results" classname="e2e/salon/customers-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Customers CRUD Operations › Mobile Responsiveness › should be responsive on mobile" classname="e2e/salon/customers-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/dashboard-fixed.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="12" failures="0" skipped="12" time="0" errors="0">
<testcase name="Salon Dashboard - Fixed Tests › should display salon page with correct elements" classname="e2e/salon/dashboard-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard - Fixed Tests › should display KPI cards" classname="e2e/salon/dashboard-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard - Fixed Tests › should display navigation sidebar" classname="e2e/salon/dashboard-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard - Fixed Tests › should navigate to appointments page" classname="e2e/salon/dashboard-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard - Fixed Tests › should navigate to clients page" classname="e2e/salon/dashboard-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard - Fixed Tests › should navigate to POS page" classname="e2e/salon/dashboard-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard - Fixed Tests › should display quick actions if present" classname="e2e/salon/dashboard-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard - Fixed Tests › should show appointments count with indicator" classname="e2e/salon/dashboard-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard - Fixed Tests › should show revenue in AED format" classname="e2e/salon/dashboard-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard - Fixed Tests › should have settings and notification icons" classname="e2e/salon/dashboard-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard - Fixed Tests › should display professional plan indicator" classname="e2e/salon/dashboard-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard - Fixed Tests › should handle loading states properly" classname="e2e/salon/dashboard-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/dashboard.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="18" failures="0" skipped="18" time="0" errors="0">
<testcase name="Salon Dashboard › should display salon dashboard with all KPI cards" classname="e2e/salon/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard › should display quick actions section" classname="e2e/salon/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard › should display today&apos;s appointments section" classname="e2e/salon/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard › should display top services section" classname="e2e/salon/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard › should display recent activity section" classname="e2e/salon/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard › should navigate to appointments from quick action" classname="e2e/salon/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard › should navigate to clients from quick action" classname="e2e/salon/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard › should navigate to POS from quick action" classname="e2e/salon/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard › should navigate to inventory from quick action" classname="e2e/salon/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard › should show correct revenue format" classname="e2e/salon/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard › should display staff availability correctly" classname="e2e/salon/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard › should navigate to all appointments from view all link" classname="e2e/salon/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard › should refresh dashboard data" classname="e2e/salon/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard › should display notification icon in header" classname="e2e/salon/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard › should display user menu in header" classname="e2e/salon/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard › should show loading state initially" classname="e2e/salon/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard › should handle empty states gracefully" classname="e2e/salon/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard › should display correct appointment status badges" classname="e2e/salon/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/debug-navigation.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug Salon Navigation Structure" classname="e2e/salon/debug-navigation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/diagnostic.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="4" failures="0" skipped="4" time="0" errors="0">
<testcase name="Salon Diagnostic Tests › should navigate to salon page" classname="e2e/salon/diagnostic.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Diagnostic Tests › should check page content" classname="e2e/salon/diagnostic.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Diagnostic Tests › should check authentication state" classname="e2e/salon/diagnostic.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Diagnostic Tests › should check for organization context" classname="e2e/salon/diagnostic.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/final-fixed-tests.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="HERA Salon - Fixed Tests for Overlapping Elements › Salon Dashboard - Basic Load Test" classname="e2e/salon/final-fixed-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Fixed Tests for Overlapping Elements › Salon Navigation - Fixed Sidebar Links" classname="e2e/salon/final-fixed-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Fixed Tests for Overlapping Elements › Salon Dashboard - Has Expected Text Content Fixed" classname="e2e/salon/final-fixed-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Fixed Tests for Overlapping Elements › Salon - Complete User Journey Fixed" classname="e2e/salon/final-fixed-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Fixed Tests for Overlapping Elements › Salon Navigation - Alternative Click Method" classname="e2e/salon/final-fixed-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Fixed Tests for Overlapping Elements › Salon Navigation - Using Keyboard Navigation" classname="e2e/salon/final-fixed-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Fixed Tests for Overlapping Elements › Salon POS Navigation - Direct URL and Interaction" classname="e2e/salon/final-fixed-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Fixed Tests for Overlapping Elements › Salon Appointments - Search Interaction Fixed" classname="e2e/salon/final-fixed-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Fixed Tests for Overlapping Elements › Salon Clients - Add Button Interaction Fixed" classname="e2e/salon/final-fixed-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/final-working-tests.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="HERA Salon - Final Working Tests › Salon Dashboard - Basic Load Test" classname="e2e/salon/final-working-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Final Working Tests › Salon Navigation - Sidebar Links Work" classname="e2e/salon/final-working-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Final Working Tests › Salon Appointments - Page Loads" classname="e2e/salon/final-working-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Final Working Tests › Salon Clients - Page Loads" classname="e2e/salon/final-working-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Final Working Tests › Salon POS - Page Loads" classname="e2e/salon/final-working-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Final Working Tests › Salon Services - Page Loads" classname="e2e/salon/final-working-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Final Working Tests › Salon Dashboard - Has Expected Text Content" classname="e2e/salon/final-working-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Final Working Tests › Salon Dashboard - Has Navigation Items" classname="e2e/salon/final-working-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Final Working Tests › Salon - Complete User Journey" classname="e2e/salon/final-working-tests.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/navigation-fixed.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="HERA Salon - Fixed Navigation Tests › Navigate to Appointments using icon button" classname="e2e/salon/navigation-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Fixed Navigation Tests › Navigate to Clients using icon button" classname="e2e/salon/navigation-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Fixed Navigation Tests › Navigate to POS using Quick Actions" classname="e2e/salon/navigation-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Fixed Navigation Tests › Navigation works with collapsed sidebar" classname="e2e/salon/navigation-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Fixed Navigation Tests › Complete navigation flow through multiple pages" classname="e2e/salon/navigation-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Fixed Navigation Tests › More Apps section expands and navigates" classname="e2e/salon/navigation-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Fixed Navigation Tests › Sidebar badge counts are visible" classname="e2e/salon/navigation-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Fixed Navigation Tests › Active navigation item has visual indicator" classname="e2e/salon/navigation-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Fixed Navigation Tests › Settings and Notifications buttons work" classname="e2e/salon/navigation-fixed.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/pos.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="15" failures="0" skipped="15" time="0" errors="0">
<testcase name="Salon Point of Sale (POS) › should display POS interface with all sections" classname="e2e/salon/pos.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Point of Sale (POS) › should search for services" classname="e2e/salon/pos.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Point of Sale (POS) › should add service to cart" classname="e2e/salon/pos.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Point of Sale (POS) › should switch to products tab" classname="e2e/salon/pos.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Point of Sale (POS) › should update cart item quantity" classname="e2e/salon/pos.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Point of Sale (POS) › should remove item from cart" classname="e2e/salon/pos.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Point of Sale (POS) › should select customer" classname="e2e/salon/pos.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Point of Sale (POS) › should display correct totals with VAT" classname="e2e/salon/pos.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Point of Sale (POS) › should open checkout dialog" classname="e2e/salon/pos.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Point of Sale (POS) › should display payment methods in checkout" classname="e2e/salon/pos.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Point of Sale (POS) › should handle split payment option" classname="e2e/salon/pos.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Point of Sale (POS) › should apply discount to items" classname="e2e/salon/pos.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Point of Sale (POS) › should clear cart" classname="e2e/salon/pos.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Point of Sale (POS) › should assign staff to service items" classname="e2e/salon/pos.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Point of Sale (POS) › should process cash payment" classname="e2e/salon/pos.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/salon-with-fixes.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="HERA Salon - Tests with CSS Fixes › Salon Dashboard Loads Successfully" classname="e2e/salon/salon-with-fixes.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Tests with CSS Fixes › Navigate to Appointments via Sidebar" classname="e2e/salon/salon-with-fixes.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Tests with CSS Fixes › Navigate to Clients via Sidebar" classname="e2e/salon/salon-with-fixes.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Tests with CSS Fixes › Navigate to POS via Sidebar" classname="e2e/salon/salon-with-fixes.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Tests with CSS Fixes › Complete Navigation Flow" classname="e2e/salon/salon-with-fixes.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Tests with CSS Fixes › Quick Actions Section is Accessible" classname="e2e/salon/salon-with-fixes.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Tests with CSS Fixes › Appointments Page Elements are Accessible" classname="e2e/salon/salon-with-fixes.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Tests with CSS Fixes › Clients Page Add Button Works" classname="e2e/salon/salon-with-fixes.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Tests with CSS Fixes › POS Page Loads with Products/Services" classname="e2e/salon/salon-with-fixes.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="HERA Salon - Tests with CSS Fixes › All Main Navigation Links Work" classname="e2e/salon/salon-with-fixes.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/screenshot-test.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="take screenshot of salon page" classname="e2e/salon/screenshot-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/services.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="16" failures="0" skipped="16" time="0" errors="0">
<testcase name="Salon Services Management › should display services page with correct layout" classname="e2e/salon/services.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Services Management › should display service cards with details" classname="e2e/salon/services.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Services Management › should open add new service dialog" classname="e2e/salon/services.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Services Management › should add new service" classname="e2e/salon/services.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Services Management › should search for services" classname="e2e/salon/services.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Services Management › should filter services by category" classname="e2e/salon/services.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Services Management › should edit service details" classname="e2e/salon/services.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Services Management › should delete service with confirmation" classname="e2e/salon/services.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Services Management › should manage service categories" classname="e2e/salon/services.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Services Management › should toggle service availability" classname="e2e/salon/services.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Services Management › should display service statistics" classname="e2e/salon/services.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Services Management › should sort services" classname="e2e/salon/services.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Services Management › should show service booking count" classname="e2e/salon/services.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Services Management › should validate service form" classname="e2e/salon/services.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Services Management › should handle bulk actions" classname="e2e/salon/services.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Services Management › should navigate back to dashboard" classname="e2e/salon/services.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/working-tests/appointments.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="4" failures="0" skipped="4" time="0" errors="0">
<testcase name="Salon Appointments - Working Tests › should load appointments page" classname="e2e/salon/working-tests/appointments.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Appointments - Working Tests › should have appointments heading" classname="e2e/salon/working-tests/appointments.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Appointments - Working Tests › should have search functionality" classname="e2e/salon/working-tests/appointments.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Appointments - Working Tests › should have action buttons" classname="e2e/salon/working-tests/appointments.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/working-tests/clients.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="4" failures="0" skipped="4" time="0" errors="0">
<testcase name="Salon Clients - Working Tests › should load clients page" classname="e2e/salon/working-tests/clients.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Clients - Working Tests › should have clients heading or title" classname="e2e/salon/working-tests/clients.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Clients - Working Tests › should have add client functionality" classname="e2e/salon/working-tests/clients.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Clients - Working Tests › should have search or filter options" classname="e2e/salon/working-tests/clients.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/working-tests/dashboard.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="7" failures="0" skipped="7" time="0" errors="0">
<testcase name="Salon Dashboard - Working Tests › should display salon welcome page" classname="e2e/salon/working-tests/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard - Working Tests › should display sidebar navigation" classname="e2e/salon/working-tests/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard - Working Tests › should show appointment count" classname="e2e/salon/working-tests/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard - Working Tests › should display KPI cards" classname="e2e/salon/working-tests/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard - Working Tests › should navigate to appointments when clicked" classname="e2e/salon/working-tests/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard - Working Tests › should navigate to POS when clicked" classname="e2e/salon/working-tests/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Dashboard - Working Tests › should display quick actions section" classname="e2e/salon/working-tests/dashboard.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon/working-tests/pos.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="Salon POS - Working Tests › should load POS page" classname="e2e/salon/working-tests/pos.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon POS - Working Tests › should have POS interface elements" classname="e2e/salon/working-tests/pos.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon POS - Working Tests › should have service or product sections" classname="e2e/salon/working-tests/pos.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/salon-services-crud.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Salon Services CRUD Operations › Create a new service" classname="e2e/salon-services-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Services CRUD Operations › Read/View service details" classname="e2e/salon-services-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Services CRUD Operations › Update an existing service" classname="e2e/salon-services-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Services CRUD Operations › Delete a service" classname="e2e/salon-services-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Services CRUD Operations › Search and filter services" classname="e2e/salon-services-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Services CRUD Operations › Validate required fields" classname="e2e/salon-services-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Salon Services CRUD Operations › Handle API errors gracefully" classname="e2e/salon-services-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Multi-tenant Service Management › Services are isolated by organization" classname="e2e/salon-services-crud.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/universal-crud/entity-management.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="5" failures="0" skipped="5" time="0" errors="0">
<testcase name="Universal Entity Management › should display entity list" classname="e2e/universal-crud/entity-management.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Universal Entity Management › should create new entity" classname="e2e/universal-crud/entity-management.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Universal Entity Management › should edit entity" classname="e2e/universal-crud/entity-management.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Universal Entity Management › should add dynamic fields" classname="e2e/universal-crud/entity-management.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Universal Entity Management › should filter entities" classname="e2e/universal-crud/entity-management.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="e2e/visual/ui-readability.spec.ts" timestamp="2025-09-09T19:49:17.147Z" hostname="chromium" tests="4" failures="0" skipped="4" time="0" errors="0">
<testcase name="UI Readability Tests › chat messages should have proper contrast" classname="e2e/visual/ui-readability.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="UI Readability Tests › input area should be clearly visible" classname="e2e/visual/ui-readability.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="UI Readability Tests › visual regression - chat interface" classname="e2e/visual/ui-readability.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="UI Readability Tests › dark mode contrast" classname="e2e/visual/ui-readability.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
</testsuites>