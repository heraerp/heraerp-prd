{
  "name": "heraerp",
  "version": "1.2.2",
  "private": true,
  "workspaces": [
    "packages/*"
  ],
  "engines": {
    "node": ">=20.6.1 <23",
    "npm": ">=9.0.0"
  },
  "engines-strict": true,
  "scripts": {
    "manifest:build": "tsx scripts/manifest/build.ts",
    "manifest:persist": "tsx scripts/manifest/persist.ts",
    "manifest:diff": "tsx scripts/manifest/diff.ts",
    "manifest:apply": "tsx scripts/manifest/apply.ts",
    "manifest:all": "npm run manifest:build && npm run manifest:persist && npm run manifest:diff",
    "hera": "tsx src/cli/index.ts",
    "db:seed:test": "tsx scripts/seed-test.ts",
    "db:seed:print": "tsx scripts/seed-test.ts --dry-run",
    "seed:salon-staff": "tsx scripts/seed/salon-staff.ts",
    "demo:setup": "node scripts/setup-demo-users.js",
    "demo:salon-users": "node scripts/create-salon-demo-users.js",
    "seed:salon-service-categories": "tsx scripts/seed/salon-service-categories.ts",
    "dev": "node scripts/startup-control-center.js && next dev",
    "dev:no-cc": "next dev",
    "fix-auth": "node scripts/fix-dev-auth.js",
    "cc": "node mcp-server/hera-control-center.js",
    "cc:health": "node mcp-server/hera-control-center.js health",
    "cc:check": "node mcp-server/hera-control-center.js control",
    "cc:deploy": "node mcp-server/hera-control-center.js deploy-check",
    "cc:guardrails": "node mcp-server/hera-control-center.js guardrails",
    "cc:setup": "node scripts/setup-control-center-hooks.js",
    "docs:generate": "node scripts/generate-docs.js",
    "docs:presets": "npm run docs:generate && echo 'Preset docs generated in ./docs/presets/'",
    "docs:diagrams": "npx tsx scripts/generate-mermaid-diagrams.ts",
    "docs:global-graph": "npx tsx scripts/generate-global-graph.ts",
    "docs:all-diagrams": "npm run docs:diagrams && npm run docs:global-graph",
    "docs:finance-dna-v2": "node scripts/export-mermaid-diagrams.js",
    "docs:finance-dna-v2:validate": "node scripts/validate-finance-dna-v2-docs.js",
    "docs:finance-dna-v2:export": "node scripts/export-mermaid-diagrams.js",
    "presets:validate": "tsx scripts/validate-presets.ts",
    "playbooks:validate": "tsx scripts/validate-playbooks.ts",
    "playbooks:test": "cd packages/hera-playbooks && npx tsx test/product-playbook.test.ts",
    "playbooks:build": "npm run build --workspace=@hera/playbooks",
    "presets:validate:modular": "tsx scripts/validate-modular-presets.ts",
    "presets:snapshot": "tsx scripts/generate-preset-snapshots.ts",
    "presets:snapshot:current": "tsx scripts/generate-preset-snapshots-ci.ts",
    "presets:test": "vitest run -c scripts/vitest.preset.contract.ts",
    "docs:changelog": "tsx scripts/generate-preset-changelog.ts",
    "packages:build": "npm run build -ws",
    "packages:clean": "npm run clean -ws",
    "prebuild": "echo 'Pre-build hook - schema validation included in quality checks'",
    "build": "node --max-old-space-size=8192 ./node_modules/next/dist/bin/next build",
    "postbuild": "node scripts/ensure-default-stylesheet.js",
    "build:analyze": "ANALYZE=true npm run build",
    "build:ci": "npm run lint && npm run typecheck && npm run build",
    "build:railway": "node --max-old-space-size=8192 ./node_modules/next/dist/bin/next build",
    "build:verify": "npm run build && node scripts/verify-next-build.js",
    "clean:build": "rm -rf .next || true",
    "build:local": "npm run quality:pre-build && npm run dna:gate && node scripts/clear-browser-cache.js && node scripts/inject-build-version.js && next build",
    "start": "next start -H 0.0.0.0 -p $PORT",
    "start:standalone": "PORT=${PORT:-3000} HOST=0.0.0.0 node .next/standalone/server.js",
    "start:custom": "node server-simple.js",
    "lint": "next lint",
    "icons:currentColor": "node scripts/icons-currentColor.cjs",
    "guard:colors": "node scripts/color-guard.cjs --report color-guard-report.json --no-exit-nonzero",
    "guard:colors:annotate": "node scripts/color-guard.cjs --report color-guard-report.json --github-annotations --no-exit-nonzero",
    "guard:colors:write": "node scripts/color-guard.cjs --write-baseline .color-guard-baseline.json",
    "guard:colors:ci": "node scripts/color-guard.cjs --baseline .color-guard-baseline.json --no-exit-nonzero",
    "guard:colors:changed": "node scripts/color-guard.cjs --baseline .color-guard-baseline.json --changed-only --no-exit-nonzero",
    "typecheck": "tsc --noEmit",
    "typecheck:strict": "tsc --noEmit --strict",
    "typecheck:watch": "tsc --noEmit --watch",
    "typecheck:fix": "node scripts/auto-fix-typescript.js",
    "build:validate": "node scripts/strict-build-validator.js",
    "dev:enhanced": "node scripts/enhanced-build-system.js",
    "quality:pre-build": "node scripts/pre-build-validate.js",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:ui": "vitest --ui",
    "test:coverage": "jest --coverage",
    "test:type-safety": "vitest run tests/type-safety/",
    "validate:contracts": "node scripts/validate-contracts.js",
    "contract-first": "node scripts/contract-first-cli.js",
    "contract-first:handshake": "node scripts/contract-first-cli.js handshake",
    "contract-first:validate": "node scripts/contract-first-cli.js validate-handshake",
    "contract-first:execute": "node scripts/contract-first-cli.js execute-workflow",
    "contract-first:status": "node scripts/contract-first-cli.js status",
    "ci:merge-protection": "node scripts/ci-merge-protection.js",
    "validate:smart-codes": "node scripts/validate-smart-codes.js",
    "build:check": "node scripts/build-check.js",
    "predeploy": "node scripts/improved-pre-deploy.js && npm run validate:smart-codes",
    "backfill:branches": "tsx scripts/backfill-branch-relationships.ts",
    "validate": "node scripts/pre-deploy-validation.js",
    "quality:check": "node scripts/quality-check.js",
    "quality:themes": "node scripts/generate-industry-theme.js",
    "quality:theme": "node scripts/generate-industry-theme.js",
    "quality:report": "npm run quality:check && npm run typecheck && npm run test",
    "quality:enterprise": "npm run quality:check && npm run cc:guardrails && npm run quality:themes list",
    "safe-deploy": "node scripts/safe-deploy.js",
    "start:production": "node production-server.js",
    "test:critical": "echo 'Add critical tests here'",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:eventbrite": "tsx scripts/test-eventbrite-integration.ts",
    "demo:eventbrite": "tsx scripts/demo-eventbrite-sync.ts",
    "test:eventbrite-api": "tsx scripts/test-eventbrite-api.ts",
    "test:e2e:salon": "playwright test tests/e2e/salon/",
    "test:e2e:customers": "playwright test tests/e2e/salon/customers",
    "test:e2e:customers:headed": "playwright test tests/e2e/salon/customers --headed",
    "test:e2e:customers:ui": "playwright test tests/e2e/salon/customers --ui",
    "test:e2e:salon:headed": "playwright test tests/e2e/salon/ --headed",
    "test:e2e:mcp": "playwright test tests/e2e/readiness-questionnaire-mcp.spec.ts",
    "test:e2e:mcp:headed": "playwright test tests/e2e/readiness-questionnaire-mcp.spec.ts --headed",
    "test:e2e:mcp:ui": "playwright test tests/e2e/readiness-questionnaire-mcp.spec.ts --ui",
    "test:e2e:mcp:debug": "playwright test tests/e2e/readiness-questionnaire-mcp.spec.ts --debug",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:report": "playwright show-report",
    "test:e2e:smoke": "playwright test --grep @smoke",
    "test:a11y": "playwright test -g \"@a11y\"",
    "test:perf": "lhci autorun",
    "test:unit": "jest tests/unit",
    "schema:validate": "node mcp-server/schema-introspection.js validate",
    "schema:types": "node mcp-server/schema-introspection.js types",
    "schema:lint:bundle": "node mcp-server/contract-lint.js --bundle",
    "schema:plan": "node mcp-server/contract-plan.js --bundle",
    "schema:graph": "node mcp-server/contract-graph.js",
    "schema:graph:check": "node mcp-server/contract-graph.js && git diff --exit-code -- .hera/graph.dot .hera/graph.svg",
    "schema:apply:dryrun": "node mcp-server/src/cli/contract-apply-dryrun.js .",
    "schema:check": "node mcp-server/check-schema.js",
    "tx:create": "node mcp-server/src/cli/tx-create.js",
    "schema:compat:write": "node mcp-server/contract-lint.js --bundle --compat --compat-write",
    "tx:validate:salon": "node scripts/tx-validate-payloads.js tests/payloads/salon_*.json",
    "seeds:apply:salon": "psql \"$DATABASE_URL\" -f hera/seeds/salon/orgs.sql",
    "schema:precommit": "node mcp-server/contract-lint.js --bundle . --compat --strict-compat",
    "prepare": "if [ \"$NODE_ENV\" != \"production\" ]; then husky install; fi",
    "seed:jewelry:v2": "tsx ./scripts/seed/jewelry-v2.ts",
    "demo:jewelry:sale:v2": "tsx ./scripts/demo/jewelry-sale-v2.ts",
    "demo:jewelry:exchange:v2": "tsx ./scripts/demo/jewelry-exchange-v2.ts",
    "test:jewelry:v2": "vitest run ./tests/jewelry/v2/*",
    "predev": "npm run schema:types",
    "test:api": "playwright test --project=api",
    "test:new-apis": "jest tests/api/v1 --verbose",
    "test:unit:legacy": "node tests/legacy/restaurant-platform-comprehensive.test.js",
    "test:integration": "jest tests/integration",
    "test:api:jest": "jest tests/api",
    "ci:smoke": "node scripts/ci-smoke.mjs",
    "ci:relationships": "node scripts/rel-guardrails.mjs",
    "test:e2e:multi-tenant": "playwright test tests/e2e/multi-tenant",
    "test:enterprise": "./scripts/run-tests.sh",
    "test:enterprise:unit": "./scripts/run-tests.sh -t unit",
    "test:enterprise:api": "./scripts/run-tests.sh -t api",
    "test:enterprise:e2e": "./scripts/run-tests.sh -t e2e",
    "test:enterprise:all": "./scripts/run-tests.sh -t all -c",
    "type-check": "tsc --noEmit",
    "factory:test-demo": "cd mcp-server && node factory-test-demo.js",
    "factory:dashboard-demo": "cd mcp-server && node factory-dashboard-demo.js",
    "convert-industry": "node scripts/convert-industry.js",
    "conversion-progress": "node scripts/conversion-progress.js",
    "convert-page": "node scripts/convert-page-to-production.js",
    "smart-convert": "node scripts/smart-page-converter.js",
    "start:prod": "NODE_ENV=production next start",
    "db:migrate": "node scripts/run-supabase-migration.js",
    "postinstall": "node scripts/setup-control-center-hooks.js",
    "test:salon": "cd packages/hera-testing && node bin/simple-test.js salon examples/salon-appointment-booking.yaml",
    "test:salon-validate": "cd packages/hera-testing && node bin/simple-test.js validate examples/salon-appointment-booking.yaml",
    "test:restaurant": "cd packages/hera-testing && node bin/simple-test.js validate examples/restaurant-order-to-cash.yaml",
    "test:business-process": "cd packages/hera-testing && node bin/simple-test.js salon",
    "test:all-industries": "npm run test:salon && npm run test:restaurant",
    "test:crud": "node scripts/auto-test-crud.js",
    "test:crud:all": "node scripts/build-with-tests.js --test-only",
    "build:test": "node scripts/build-with-tests.js",
    "build:test:verbose": "node scripts/build-with-tests.js --verbose",
    "quality:audit": "npm run quality:check && npm run quality:pre-build",
    "dna:load": "node packages/hera-dna-sdk/scripts/load-charter.js || echo 'DNA load skipped'",
    "dna:lint": "node packages/hera-dna-sdk/scripts/lint-dna.js || echo 'DNA lint skipped'",
    "dna:gate": "npm run dna:load && npm run dna:lint || echo 'DNA gate skipped'",
    "dna:generate": "node packages/hera-dna-sdk/scripts/generate-sdk.js",
    "quality:fix": "npm run lint -- --fix && npm run format",
    "format": "prettier --write \"src/**/*.{ts,tsx,js,jsx,json,md}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,js,jsx,json,md}\"",
    "ui:validate": "node scripts/validate-ui-patterns.js",
    "ui:validate:staged": "node scripts/validate-ui-patterns-staged.js",
    "ui:generate": "node scripts/generate-ui-component.js",
    "ui:check": "npm run ui:validate && npm run format:check",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:mobile": "playwright test --project='Mobile Chrome' --project='Mobile Safari'",
    "test:e2e:codegen": "playwright codegen http://localhost:3000",
    "test:e2e:install": "playwright install",
    "test:uat": "npm run test:e2e -- --grep @uat",
    "test:smoke": "npm run test:e2e -- --grep @smoke",
    "test:icecream": "playwright test tests/api/icecream tests/e2e/icecream",
    "test:icecream:api": "playwright test tests/api/icecream",
    "test:icecream:ui": "playwright test tests/e2e/icecream",
    "test:sap-fi:integration": "playwright test tests/api/sap-fi/sap-fi-integration.spec.ts --project=chromium",
    "test:sap-fi:edge-cases": "playwright test tests/api/sap-fi/sap-fi-edge-cases.spec.ts --project=chromium",
    "test:sap-fi:mcp": "node tests/mcp/sap-fi-mcp.test.js",
    "test:sap-fi:report": "tsx tests/reports/sap-fi-test-report.ts",
    "test:sap-fi:all": "npm run test:sap-fi:integration && npm run test:sap-fi:edge-cases && npm run test:sap-fi:mcp && npm run test:sap-fi:report",
    "monitoring:dev": "docker-compose -f monitoring/docker-compose.yml up -d",
    "monitoring:stop": "docker-compose -f monitoring/docker-compose.yml down",
    "monitoring:logs": "docker-compose -f monitoring/docker-compose.yml logs -f",
    "monitoring:status": "curl -s http://localhost:3001/api/health | jq .",
    "docs:setup-hooks": "node scripts/setup-doc-hooks.js",
    "docs:sync": "node scripts/sync-docs.js",
    "docs:health": "node scripts/doc-health.js",
    "docs:validate": "node scripts/validate-docs.js",
    "docs:cleanup": "node scripts/cleanup-docs.js",
    "docs:full-maintenance": "npm run docs:cleanup && npm run docs:generate && npm run docs:sync && npm run docs:validate",
    "docs:ai-generate": "node scripts/ai-generate-docs.js",
    "blog:generate": "bash ./scripts/run-blog-automation.sh",
    "blog:generate:multiple": "bash ./scripts/run-blog-automation.sh 3",
    "build:production": "npm run predeploy && npm run build",
    "build:force": "node scripts/force-production-deploy.js && npm run build",
    "build:emergency": "echo \"Emergency build mode - skipping build\" && mkdir -p .next && echo \"{\"phase\": \"phase-production-build\"}\" > .next/BUILD_ID",
    "start:emergency": "NODE_ENV=production node emergency-server.js",
    "playbooks:sync:to-hera": "node scripts/sync-playbooks.mjs --direction=to-hera",
    "playbooks:sync:to-root": "node scripts/sync-playbooks.mjs --direction=to-root",
    "ga:preflight": "npm run type-check && npm run lint && npm run test && npm run e2e:headless",
    "ga:guardrails": "node scripts/ga/guardrails-check.js",
    "ga:perf": "node scripts/ga/perf-budgets.js",
    "ga:a11y": "node scripts/ga/a11y-lighthouse.js",
    "ga:bundle": "node scripts/ga/bundle-budget.js",
    "ga:security": "node scripts/ga/security-headers.js",
    "ga:smoke": "node scripts/ga/smoke-suite.js",
    "ga:env": "node scripts/ga/env-validate.js",
    "ga:report": "node scripts/ga/ga-summary.js",
    "ga:all": "npm run ga:preflight && npm run ga:env && npm run ga:guardrails && npm run ga:perf && npm run ga:a11y && npm run ga:bundle && npm run ga:security && npm run ga:smoke && npm run ga:report",
    "e2e:headless": "playwright test --headed=false",
    "salon:canary:enable": "node scripts/salon-canary-enable.js",
    "salon:canary:test": "node scripts/salon-canary-test-flows.js",
    "salon:canary:monitor": "node scripts/salon-canary-monitoring.js",
    "salon:canary:rollback": "node scripts/salon-canary-rollback.js hair-talkz-salon-org-uuid pos_cart",
    "salon:canary:rollback:all": "node scripts/salon-canary-rollback.js hair-talkz-salon-org-uuid --all",
    "salon:canary:status": "node scripts/salon-canary-rollback.js hair-talkz-salon-org-uuid --status",
    "salon:canary:report": "node scripts/salon-canary-monitoring.js --report",
    "salon:canary:dashboard": "open http://localhost:3000/dashboards/hair-talkz-workflows",
    "finance-dna-v2:ci": "tsx src/lib/guardrails/finance-dna-v2-ci-runner.ts --environment=development",
    "finance-dna-v2:ci:staging": "tsx src/lib/guardrails/finance-dna-v2-ci-runner.ts --environment=staging --strict",
    "finance-dna-v2:ci:production": "tsx src/lib/guardrails/finance-dna-v2-ci-runner.ts --environment=production --strict --timeout=60000",
    "finance-dna-v2:smoke-test": "tsx src/lib/guardrails/finance-dna-v2-ci-runner.ts --operation=smoke-test",
    "finance-dna-v2:smoke-test:quick": "tsx src/lib/guardrails/finance-dna-v2-ci-runner.ts --operation=smoke-test --quick",
    "finance-dna-v2:validate-smart-codes": "node scripts/validate-finance-dna-v2-smart-codes.js",
    "finance-dna-v2:test-gl-balance": "jest tests/finance-dna-v2/gl-balance.test.js",
    "finance-dna-v2:test-fiscal-periods": "jest tests/finance-dna-v2/fiscal-periods.test.js",
    "finance-dna-v2:test-coa-mapping": "jest tests/finance-dna-v2/coa-mapping.test.js",
    "finance-dna-v2:test-ai-workflows": "jest tests/finance-dna-v2/ai-workflows.test.js",
    "finance-dna-v2:test-multi-currency": "jest tests/finance-dna-v2/multi-currency.test.js",
    "finance-dna-v2:performance-test": "tsx scripts/finance-dna-v2-performance-test.ts",
    "finance-dna-v2:load-test-single": "tsx scripts/finance-dna-v2-load-test-single.ts",
    "finance-dna-v2:load-test-batch": "tsx scripts/finance-dna-v2-load-test-batch.ts",
    "finance-dna-v2:memory-analysis": "tsx scripts/finance-dna-v2-memory-analysis.ts",
    "finance-dna-v2:api-integration-test": "playwright test tests/api/finance-dna-v2/",
    "finance-dna-v2:e2e-test": "playwright test tests/e2e/finance-dna-v2/",
    "finance-dna-v2:backward-compatibility-test": "jest tests/finance-dna-v2/backward-compatibility.test.js",
    "finance-dna-v2:security-audit": "tsx scripts/finance-dna-v2-security-audit.ts",
    "finance-dna-v2:test-sql-injection": "jest tests/finance-dna-v2/security/sql-injection.test.js",
    "finance-dna-v2:test-authorization": "jest tests/finance-dna-v2/security/authorization.test.js",
    "finance-dna-v2:test-audit-trails": "jest tests/finance-dna-v2/security/audit-trails.test.js",
    "finance-dna-v2:test-pii-protection": "jest tests/finance-dna-v2/security/pii-protection.test.js",
    "finance-dna-v2:deployment-readiness": "tsx scripts/finance-dna-v2-deployment-readiness.ts",
    "finance-dna-v2:generate-deployment-report": "tsx scripts/finance-dna-v2-deployment-report.ts",
    "db:setup-test": "echo 'Setting up test database...' && node scripts/setup-test-db.js",
    "db:migrate-test": "echo 'Running test migrations...' && node scripts/migrate-test-db.js",
    "db:seed-finance-dna-v2-test": "psql \"$DATABASE_URL\" -f database/seed/finance-dna-v2-policy-seeds.sql",
    "db:setup-perf-test": "echo 'Setting up performance test database...' && node scripts/setup-perf-test-db.js",
    "db:migrate-perf-test": "echo 'Running performance test migrations...' && node scripts/migrate-perf-test-db.js",
    "db:seed-finance-dna-v2-perf-test": "psql \"$DATABASE_URL\" -f database/seed/finance-dna-v2-policy-seeds.sql && psql \"$DATABASE_URL\" -f database/functions/finance-posting-rules-v2-rpc.sql",
    "db:setup-integration-test": "echo 'Setting up integration test database...' && node scripts/setup-integration-test-db.js",
    "db:migrate-integration-test": "echo 'Running integration test migrations...' && node scripts/migrate-integration-test-db.js",
    "db:seed-integration-test": "psql \"$DATABASE_URL\" -f database/seed/finance-dna-v2-policy-seeds.sql && psql \"$DATABASE_URL\" -f database/functions/finance-posting-rules-v2-rpc.sql"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.60.0",
    "@dnd-kit/core": "^6.3.1",
    "@dnd-kit/sortable": "^10.0.0",
    "@dnd-kit/utilities": "^3.2.2",
    "@floating-ui/dom": "^1.6.0",
    "@fullcalendar/core": "^6.1.19",
    "@fullcalendar/daygrid": "^6.1.19",
    "@fullcalendar/interaction": "^6.1.19",
    "@fullcalendar/list": "^6.1.19",
    "@fullcalendar/react": "^6.1.19",
    "@fullcalendar/resource": "^6.1.19",
    "@fullcalendar/resource-timegrid": "^6.1.19",
    "@fullcalendar/resource-timeline": "^6.1.19",
    "@fullcalendar/rrule": "^6.1.19",
    "@fullcalendar/timegrid": "^6.1.19",
    "@hookform/resolvers": "^5.2.1",
    "@octokit/rest": "^22.0.0",
    "@opentelemetry/api": "^1.7.0",
    "@opentelemetry/auto-instrumentations-node": "^0.40.0",
    "@opentelemetry/exporter-trace-otlp-http": "^0.46.0",
    "@opentelemetry/resources": "^1.19.0",
    "@opentelemetry/sdk-node": "^0.46.0",
    "@opentelemetry/sdk-trace-base": "^1.19.0",
    "@opentelemetry/semantic-conventions": "^1.19.0",
    "@orama/orama": "^3.1.14",
    "@radix-ui/react-accordion": "^1.2.12",
    "@radix-ui/react-alert-dialog": "^1.0.5",
    "@radix-ui/react-avatar": "^1.0.4",
    "@radix-ui/react-checkbox": "^1.0.4",
    "@radix-ui/react-collapsible": "^1.0.3",
    "@radix-ui/react-context-menu": "^2.2.16",
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-dropdown-menu": "^2.1.16",
    "@radix-ui/react-label": "^2.0.2",
    "@radix-ui/react-popover": "^1.1.15",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-radio-group": "^1.3.8",
    "@radix-ui/react-scroll-area": "^1.0.5",
    "@radix-ui/react-select": "^2.0.0",
    "@radix-ui/react-separator": "^1.0.3",
    "@radix-ui/react-slider": "^1.3.6",
    "@radix-ui/react-switch": "^1.0.3",
    "@radix-ui/react-tabs": "^1.0.4",
    "@radix-ui/react-toast": "^1.2.15",
    "@radix-ui/react-toggle": "^1.1.10",
    "@radix-ui/react-toggle-group": "^1.1.11",
    "@radix-ui/react-tooltip": "^1.0.7",
    "@supabase/auth-helpers-nextjs": "^0.10.0",
    "@supabase/ssr": "^0.7.0",
    "@supabase/supabase-js": "^2.55.0",
    "@tailwindcss/forms": "^0.5.10",
    "@tailwindcss/typography": "^0.5.16",
    "@tanstack/query-sync-storage-persister": "^5.90.2",
    "@tanstack/react-query": "^5.83.0",
    "@tanstack/react-query-devtools": "^5.85.0",
    "@tanstack/react-query-persist-client": "^5.90.2",
    "@types/bcryptjs": "^2.4.6",
    "@types/nprogress": "^0.2.3",
    "@types/react-window": "^1.8.8",
    "@types/validator": "^13.15.2",
    "ajv": "^8.17.1",
    "ajv-formats": "^3.0.1",
    "autoprefixer": "^10.4.16",
    "axios": "^1.11.0",
    "bcryptjs": "^3.0.2",
    "chart.js": "^4.5.0",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.0.0",
    "cmdk": "^1.1.1",
    "cron-parser": "^5.4.0",
    "crypto-js": "^4.2.0",
    "date-fns": "^3.6.0",
    "date-fns-tz": "^3.2.0",
    "dotenv": "^16.6.1",
    "express": "^5.1.0",
    "framer-motion": "^11.18.2",
    "gray-matter": "^4.0.3",
    "http-proxy-middleware": "^3.0.5",
    "isomorphic-dompurify": "^2.26.0",
    "js-yaml": "^4.1.0",
    "json2csv": "^6.0.0-alpha.2",
    "jsonwebtoken": "^9.0.2",
    "jszip": "^3.10.1",
    "lru-cache": "^11.2.2",
    "lucide-react": "^0.294.0",
    "marked": "^16.3.0",
    "mermaid": "^11.11.0",
    "minimatch": "^9.0.3",
    "next": "^15.4.6",
    "next-mdx-remote": "^5.0.0",
    "next-themes": "^0.4.6",
    "nprogress": "^0.2.0",
    "openai": "^5.19.1",
    "pdf-lib": "^1.17.1",
    "pdf-parse": "^1.1.1",
    "postcss": "^8.4.31",
    "prom-client": "^15.1.0",
    "react": "^18.3.1",
    "react-chartjs-2": "^5.3.0",
    "react-day-picker": "^8.10.1",
    "react-dom": "^18.3.1",
    "react-dropzone": "^14.3.8",
    "react-hook-form": "^7.61.1",
    "react-hot-toast": "^2.6.0",
    "react-icons": "^5.5.0",
    "react-is": "^18.3.1",
    "react-joyride": "^2.9.3",
    "react-markdown": "^10.1.0",
    "react-window": "^2.2.0",
    "recharts": "^2.15.4",
    "remark-gfm": "^4.0.1",
    "resend": "^4.0.0",
    "sonner": "^2.0.7",
    "swr": "^2.3.6",
    "tailwind-merge": "^2.0.0",
    "tailwindcss": "^3.4.0",
    "tailwindcss-animate": "^1.0.7",
    "use-debounce": "^10.0.6",
    "uuid": "^11.1.0",
    "validator": "^13.15.15",
    "winston": "^3.11.0",
    "yahoo-finance2": "^2.13.3",
    "zod": "^3.22.4",
    "zustand": "^4.4.7"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.9.0",
    "@lhci/cli": "^0.14.0",
    "@mermaid-js/mermaid-cli": "^11.12.0",
    "@next/bundle-analyzer": "^15.5.2",
    "@playwright/test": "^1.55.0",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^14.1.2",
    "@types/crypto-js": "^4.2.2",
    "@types/jest": "^30.0.0",
    "@types/js-yaml": "^4.0.9",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/minimatch": "^5.1.2",
    "@types/node": "^20.12.12",
    "@types/react": "^18.3.0",
    "@types/react-dom": "^18.3.0",
    "@types/uuid": "^10",
    "@vitest/ui": "^3.2.4",
    "babel-jest": "^30.1.2",
    "chalk": "^4.1.2",
    "commander": "^11.1.0",
    "eslint": "^8.57.0",
    "eslint-config-next": "^14.2.0",
    "glob": "^11.0.3",
    "husky": "^9.1.3",
    "identity-obj-proxy": "^3.0.0",
    "inquirer": "^8.2.6",
    "jest": "^30.1.3",
    "jsdom": "^23.0.1",
    "lighthouse": "^12.0.0",
    "node-fetch": "^2.7.0",
    "ora": "^5.4.1",
    "pg": "^8.11.5",
    "prettier": "^3.6.2",
    "puppeteer": "^24.22.3",
    "ts-jest": "^29.4.1",
    "ts-node": "^10.9.2",
    "tsx": "^4.19.0",
    "typescript": "^5.6.3",
    "vitest": "^1.6.1"
  },
  "overrides": {
    "style-to-object": "1.0.9",
    "semver": "7.7.2",
    "color": "4.2.3",
    "webidl-conversions": "7.0.0"
  },
  "packageManager": "npm@10.9.0"
}
