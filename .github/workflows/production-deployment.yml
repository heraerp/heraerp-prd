name: Production Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "deploy" to confirm production deployment'
        required: true
        default: ''

env:
  NODE_VERSION: '20.9.0'

jobs:
  # Step 1: Validate deployment confirmation
  validate-deployment:
    name: Validate Deployment
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Check confirmation
        run: |
          if [ "${{ github.event.inputs.confirm }}" != "deploy" ]; then
            echo "‚ùå Deployment not confirmed"
            exit 1
          fi
          echo "‚úÖ Deployment confirmed"

  # Step 2: Pre-deployment checks
  pre-deployment-checks:
    name: Pre-deployment Checks
    runs-on: ubuntu-latest
    needs: validate-deployment
    if: always() && (needs.validate-deployment.result == 'success' || github.event_name == 'push')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run pre-deployment script
        run: npm run predeploy

      - name: Build for production
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NODE_ENV: production

      - name: Run tests
        run: npm test
        continue-on-error: true

  # Step 3: Deploy to Production
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: pre-deployment-checks
    environment:
      name: production
      url: https://app.heraerp.com
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy to Railway Production
        run: railway up --service heraerp-prd --environment production
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_PRODUCTION_TOKEN }}

      - name: Wait for deployment
        run: sleep 90

      - name: Production health check
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://app.heraerp.com/api/health)
          if [ $response != "200" ]; then
            echo "‚ùå Production health check failed with status $response"
            exit 1
          fi
          echo "‚úÖ Production health check passed"

  # Step 4: Post-deployment verification
  post-deployment:
    name: Post-deployment Verification
    runs-on: ubuntu-latest
    needs: deploy-production
    steps:
      - name: Test critical endpoints
        run: |
          echo "Testing critical endpoints..."
          curl -f https://app.heraerp.com || exit 1
          curl -f https://app.heraerp.com/api/v2/health || exit 1
          echo "‚úÖ All endpoints responding"

      - name: Deployment summary
        run: |
          echo "üöÄ Production Deployment Summary"
          echo "================================"
          echo "Environment: Production"
          echo "URL: https://app.heraerp.com"
          echo "Status: ‚úÖ Successful"
          echo "Time: $(date)"

  # Step 5: Rollback on failure
  rollback:
    name: Rollback on Failure
    runs-on: ubuntu-latest
    needs: [deploy-production, post-deployment]
    if: failure()
    steps:
      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Rollback deployment
        run: |
          echo "‚ö†Ô∏è Deployment failed, initiating rollback..."
          railway rollback --environment production
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_PRODUCTION_TOKEN }}

      - name: Notify team
        run: |
          echo "üö® PRODUCTION DEPLOYMENT FAILED AND ROLLED BACK"
          echo "Please review logs and fix issues before retrying"
