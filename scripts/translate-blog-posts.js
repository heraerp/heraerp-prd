#!/usr/bin/env node

const fs = require("fs");
const path = require("path");

// Language mappings for cities
const cityLanguageMap = {
  // India
  "Kochi": { language: "Malayalam", code: "ml" },
  "Chennai": { language: "Tamil", code: "ta" },
  "Bangalore": { language: "Kannada", code: "kn" },
  "Hyderabad": { language: "Telugu", code: "te" },
  "Mumbai": { language: "Marathi", code: "mr" },
  "Pune": { language: "Marathi", code: "mr" },
  "Kolkata": { language: "Bengali", code: "bn" },
  "Ahmedabad": { language: "Gujarati", code: "gu" },
  "Surat": { language: "Gujarati", code: "gu" },
  "Jaipur": { language: "Hindi", code: "hi" },
  "Delhi": { language: "Hindi", code: "hi" },
  "Lucknow": { language: "Hindi", code: "hi" },
  "Chandigarh": { language: "Punjabi", code: "pa" },
  // UAE
  "Dubai": { language: "Arabic", code: "ar" },
  "Abu Dhabi": { language: "Arabic", code: "ar" }
};

// Malayalam translations for common business terms
const malayalamTranslations = {
  // Headers and titles
  "Transform Your Business Operations": "‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥¨‡¥ø‡¥∏‡¥ø‡¥®‡¥∏‡µç ‡¥™‡µç‡¥∞‡¥µ‡µº‡¥§‡µç‡¥§‡¥®‡¥ô‡µç‡¥ô‡µæ ‡¥™‡¥∞‡¥ø‡¥µ‡µº‡¥§‡µç‡¥§‡¥®‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï",
  "Business Growth Insights": "‡¥¨‡¥ø‡¥∏‡¥ø‡¥®‡¥∏‡µç ‡¥µ‡¥≥‡µº‡¥ö‡µç‡¥ö ‡¥â‡µæ‡¥ï‡µç‡¥ï‡¥æ‡¥¥‡µç‡¥ö‡¥ï‡µæ",
  "The Current State of": "‡¥®‡¥ø‡¥≤‡¥µ‡¥ø‡¥≤‡µÜ ‡¥Ö‡¥µ‡¥∏‡µç‡¥•",
  "Real Success Stories from": "‡¥Ø‡¥•‡¥æ‡µº‡¥§‡µç‡¥• ‡¥µ‡¥ø‡¥ú‡¥Ø ‡¥ï‡¥•‡¥ï‡µæ",
  "Taking Action: Your Next Steps": "‡¥®‡¥ü‡¥™‡¥ü‡¥ø ‡¥é‡¥ü‡µÅ‡¥ï‡µç‡¥ï‡µÅ‡¥ï: ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥Ö‡¥ü‡µÅ‡¥§‡µç‡¥§ ‡¥ò‡¥ü‡µç‡¥ü‡¥ô‡µç‡¥ô‡µæ",
  "Conclusion": "‡¥â‡¥™‡¥∏‡¥Ç‡¥π‡¥æ‡¥∞‡¥Ç",
  
  // Common phrases
  "businesses": "‡¥¨‡¥ø‡¥∏‡¥ø‡¥®‡¥∏‡µÅ‡¥ï‡µæ",
  "small businesses": "‡¥ö‡µÜ‡¥±‡µÅ‡¥ï‡¥ø‡¥ü ‡¥¨‡¥ø‡¥∏‡¥ø‡¥®‡¥∏‡µÅ‡¥ï‡µæ",
  "business environment": "‡¥¨‡¥ø‡¥∏‡¥ø‡¥®‡¥∏‡µç ‡¥™‡¥∞‡¥ø‡¥∏‡¥∞‡¥Ç",
  "manual processes": "‡¥Æ‡¥æ‡¥®‡µÅ‡¥µ‡µΩ ‡¥™‡µç‡¥∞‡¥ï‡µç‡¥∞‡¥ø‡¥Ø‡¥ï‡µæ",
  "automated": "‡¥ì‡¥ü‡µç‡¥ü‡µã‡¥Æ‡µá‡¥±‡µç‡¥±‡¥°‡µç",
  "efficiency gains": "‡¥ï‡¥æ‡¥∞‡µç‡¥Ø‡¥ï‡µç‡¥∑‡¥Æ‡¥§ ‡¥®‡µá‡¥ü‡µç‡¥ü‡¥ô‡µç‡¥ô‡µæ",
  "cost reduction": "‡¥ö‡µÜ‡¥≤‡¥µ‡µç ‡¥ï‡µÅ‡¥±‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µΩ",
  "revenue growth": "‡¥µ‡¥∞‡µÅ‡¥Æ‡¥æ‡¥® ‡¥µ‡¥≥‡µº‡¥ö‡µç‡¥ö",
  "customer satisfaction": "‡¥â‡¥™‡¥≠‡µã‡¥ï‡µç‡¥§‡µÉ ‡¥∏‡¥Ç‡¥§‡µÉ‡¥™‡µç‡¥§‡¥ø",
  "digital transformation": "‡¥°‡¥ø‡¥ú‡¥ø‡¥±‡µç‡¥±‡µΩ ‡¥™‡¥∞‡¥ø‡¥µ‡µº‡¥§‡µç‡¥§‡¥®‡¥Ç",
  "data-driven decisions": "‡¥°‡¥æ‡¥±‡µç‡¥± ‡¥Ö‡¥ü‡¥ø‡¥∏‡µç‡¥•‡¥æ‡¥®‡¥Æ‡¥æ‡¥ï‡µç‡¥ï‡¥ø‡¥Ø‡µÅ‡¥≥‡µç‡¥≥ ‡¥§‡µÄ‡¥∞‡µÅ‡¥Æ‡¥æ‡¥®‡¥ô‡µç‡¥ô‡µæ",
  
  // CTA phrases
  "Get Free SMB Guide": "‡¥∏‡µó‡¥ú‡¥®‡µç‡¥Ø SMB ‡¥ó‡µà‡¥°‡µç ‡¥®‡µá‡¥ü‡µÅ‡¥ï",
  "Book a Demo": "‡¥°‡µÜ‡¥Æ‡µã ‡¥¨‡µÅ‡¥ï‡µç‡¥ï‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï",
  "Learn More": "‡¥ï‡µÇ‡¥ü‡µÅ‡¥§‡µΩ ‡¥Ö‡¥±‡¥ø‡¥Ø‡µÅ‡¥ï",
  "Get Started": "‡¥Ü‡¥∞‡¥Ç‡¥≠‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï",
  "Contact Us": "‡¥û‡¥ô‡µç‡¥ô‡¥≥‡µÜ ‡¥¨‡¥®‡µç‡¥ß‡¥™‡µç‡¥™‡µÜ‡¥ü‡µÅ‡¥ï",
  
  // Benefits
  "Save time": "‡¥∏‡¥Æ‡¥Ø‡¥Ç ‡¥≤‡¥æ‡¥≠‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï",
  "Increase efficiency": "‡¥ï‡¥æ‡¥∞‡µç‡¥Ø‡¥ï‡µç‡¥∑‡¥Æ‡¥§ ‡¥µ‡µº‡¥¶‡µç‡¥ß‡¥ø‡¥™‡µç‡¥™‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï",
  "Reduce costs": "‡¥ö‡µÜ‡¥≤‡¥µ‡µç ‡¥ï‡µÅ‡¥±‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µÅ‡¥ï",
  "Improve visibility": "‡¥¶‡µÉ‡¥∂‡µç‡¥Ø‡¥§ ‡¥Æ‡µÜ‡¥ö‡µç‡¥ö‡¥™‡µç‡¥™‡µÜ‡¥ü‡µÅ‡¥§‡µç‡¥§‡µÅ‡¥ï",
  "Scale operations": "‡¥™‡µç‡¥∞‡¥µ‡µº‡¥§‡µç‡¥§‡¥®‡¥ô‡µç‡¥ô‡µæ ‡¥µ‡¥ø‡¥ï‡¥∏‡¥ø‡¥™‡µç‡¥™‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï",
  
  // Industries
  "retail business": "‡¥ö‡¥ø‡¥≤‡µç‡¥≤‡¥± ‡¥µ‡µç‡¥Ø‡¥æ‡¥™‡¥æ‡¥∞‡¥Ç",
  "service company": "‡¥∏‡µá‡¥µ‡¥® ‡¥ï‡¥Æ‡µç‡¥™‡¥®‡¥ø",
  "trading business": "‡¥µ‡µç‡¥Ø‡¥æ‡¥™‡¥æ‡¥∞ ‡¥¨‡¥ø‡¥∏‡¥ø‡¥®‡¥∏‡µç",
  "manufacturing": "‡¥®‡¥ø‡µº‡¥Æ‡µç‡¥Æ‡¥æ‡¥£‡¥Ç",
  "healthcare": "‡¥Ü‡¥∞‡µã‡¥ó‡µç‡¥Ø ‡¥∏‡¥Ç‡¥∞‡¥ï‡µç‡¥∑‡¥£‡¥Ç",
  "restaurant": "‡¥±‡µÜ‡¥∏‡µç‡¥±‡µç‡¥±‡µã‡¥±‡¥®‡µç‡¥±‡µç"
};

// Helper to translate a specific phrase
function translatePhrase(phrase, translations) {
  // Check for exact match first
  if (translations[phrase]) {
    return translations[phrase];
  }
  
  // Try to match and replace parts
  let translated = phrase;
  for (const [eng, mal] of Object.entries(translations)) {
    const regex = new RegExp(eng, 'gi');
    translated = translated.replace(regex, mal);
  }
  
  return translated;
}

// Generate translated blog post for Malayalam (Kochi)
function generateMalayalamPost(originalContent, metadata) {
  // Parse the original content
  const lines = originalContent.split('\n');
  const translatedLines = [];
  
  for (let line of lines) {
    // Skip MDX imports
    if (line.startsWith('import')) {
      translatedLines.push(line);
      continue;
    }
    
    // Translate headers
    if (line.startsWith('#')) {
      const headerMatch = line.match(/^(#+)\s*(.*)$/);
      if (headerMatch) {
        const level = headerMatch[1];
        const text = headerMatch[2];
        const translated = translatePhrase(text, malayalamTranslations);
        translatedLines.push(`${level} ${translated}`);
        continue;
      }
    }
    
    // Translate list items
    if (line.trim().startsWith('-') || line.trim().startsWith('*')) {
      const listMatch = line.match(/^(\s*[-*])\s*(.*)$/);
      if (listMatch) {
        const prefix = listMatch[1];
        const text = listMatch[2];
        const translated = translatePhrase(text, malayalamTranslations);
        translatedLines.push(`${prefix} ${translated}`);
        continue;
      }
    }
    
    // Keep MDX components as is
    if (line.includes('<') && line.includes('>')) {
      translatedLines.push(line);
      continue;
    }
    
    // Translate regular text
    if (line.trim()) {
      const translated = translatePhrase(line, malayalamTranslations);
      translatedLines.push(translated);
    } else {
      translatedLines.push(line);
    }
  }
  
  return translatedLines.join('\n');
}

// Create bilingual version with English and Malayalam
function createBilingualPost(englishContent, malayalamContent, metadata) {
  const bilingualContent = `
import CTA from "@/components/CTA";
import FAQ from "@/components/FAQ";
import NewsletterSignup from "@/components/NewsletterSignup";
import RelatedPosts from "@/components/RelatedPosts";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";

<Tabs defaultValue="english" className="w-full">
  <TabsList className="grid w-full grid-cols-2 mb-8">
    <TabsTrigger value="english">English</TabsTrigger>
    <TabsTrigger value="malayalam">‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç</TabsTrigger>
  </TabsList>
  
  <TabsContent value="english">
${englishContent}
  </TabsContent>
  
  <TabsContent value="malayalam">
    <div className="malayalam-content" style={{ fontFamily: 'Noto Sans Malayalam, sans-serif' }}>
${malayalamContent}
    </div>
  </TabsContent>
</Tabs>
`;

  return bilingualContent;
}

// Main function to translate posts
async function translatePosts() {
  const postsDir = path.join(__dirname, "../generated/blog-posts");
  const translatedDir = path.join(__dirname, "../generated/translated-blog-posts");
  
  // Ensure output directory exists
  if (!fs.existsSync(translatedDir)) {
    fs.mkdirSync(translatedDir, { recursive: true });
  }
  
  // Find Kochi posts
  const files = fs.readdirSync(postsDir);
  const kochiPosts = files.filter(file => 
    file.endsWith('.mdx') && file.toLowerCase().includes('kochi')
  );
  
  console.log(`üåè Found ${kochiPosts.length} Kochi posts to translate to Malayalam`);
  
  for (const file of kochiPosts) {
    console.log(`\nüìù Translating: ${file}`);
    
    const filePath = path.join(postsDir, file);
    const content = fs.readFileSync(filePath, 'utf8');
    
    // Split front matter and content
    const frontMatterMatch = content.match(/^---\n([\s\S]*?)\n---\n([\s\S]*)$/);
    if (!frontMatterMatch) {
      console.log(`‚ö†Ô∏è  Could not parse front matter for ${file}`);
      continue;
    }
    
    const frontMatter = frontMatterMatch[1];
    const mainContent = frontMatterMatch[2];
    
    // Parse metadata from front matter
    const metadata = {};
    const metadataLines = frontMatter.split('\n');
    for (const line of metadataLines) {
      const match = line.match(/^(\w+):\s*"?(.+?)"?$/);
      if (match) {
        metadata[match[1]] = match[2];
      }
    }
    
    // Generate Malayalam translation
    console.log('  üîÑ Generating Malayalam translation...');
    const malayalamContent = generateMalayalamPost(mainContent, metadata);
    
    // Create bilingual version
    console.log('  üìã Creating bilingual version...');
    const bilingualContent = createBilingualPost(mainContent, malayalamContent, metadata);
    
    // Update front matter with language info
    const updatedFrontMatter = frontMatter + '\nlanguages:\n  - "en"\n  - "ml"\ndefaultLanguage: "en"';
    
    // Save translated version
    const outputFile = file.replace('.mdx', '-bilingual.mdx');
    const outputPath = path.join(translatedDir, outputFile);
    const finalContent = `---\n${updatedFrontMatter}\n---\n${bilingualContent}`;
    
    fs.writeFileSync(outputPath, finalContent, 'utf8');
    console.log(`  ‚úÖ Saved: ${outputFile}`);
  }
  
  // Create a simple Malayalam-only version for one post
  if (kochiPosts.length > 0) {
    const firstPost = kochiPosts[0];
    console.log(`\nüåü Creating Malayalam-only version of ${firstPost}`);
    
    const filePath = path.join(postsDir, firstPost);
    const content = fs.readFileSync(filePath, 'utf8');
    
    const frontMatterMatch = content.match(/^---\n([\s\S]*?)\n---\n([\s\S]*)$/);
    if (frontMatterMatch) {
      const frontMatter = frontMatterMatch[1];
      const mainContent = frontMatterMatch[2];
      
      // Create full Malayalam post
      const fullMalayalamContent = `
import CTA from "@/components/CTA";
import FAQ from "@/components/FAQ";
import NewsletterSignup from "@/components/NewsletterSignup";
import RelatedPosts from "@/components/RelatedPosts";

# ‡¥ï‡µä‡¥ö‡µç‡¥ö‡¥ø‡¥Ø‡¥ø‡¥≤‡µÜ ‡¥¨‡¥ø‡¥∏‡¥ø‡¥®‡¥∏‡µÅ‡¥ï‡µæ‡¥ï‡µç‡¥ï‡¥æ‡¥Ø‡¥ø ‡¥∏‡µç‡¥±‡µç‡¥±‡¥æ‡¥´‡µç ‡¥Æ‡¥æ‡¥®‡µá‡¥ú‡µç‚Äå‡¥Æ‡µÜ‡¥®‡µç‡¥±‡µç - ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥¨‡¥ø‡¥∏‡¥ø‡¥®‡¥∏‡µç ‡¥™‡µç‡¥∞‡¥µ‡µº‡¥§‡µç‡¥§‡¥®‡¥ô‡µç‡¥ô‡µæ ‡¥™‡¥∞‡¥ø‡¥µ‡µº‡¥§‡µç‡¥§‡¥®‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï

‡¥á‡¥®‡µç‡¥®‡¥§‡µç‡¥§‡µÜ ‡¥Æ‡¥§‡µç‡¥∏‡¥∞‡¥æ‡¥ß‡¥ø‡¥∑‡µç‡¥†‡¥ø‡¥§ ‡¥ï‡µä‡¥ö‡µç‡¥ö‡¥ø ‡¥¨‡¥ø‡¥∏‡¥ø‡¥®‡¥∏‡µç ‡¥™‡¥∞‡¥ø‡¥∏‡¥∞‡¥§‡µç‡¥§‡µç, ‡¥∏‡µç‡¥±‡µç‡¥±‡¥æ‡¥´‡µç ‡¥Æ‡¥æ‡¥®‡µá‡¥ú‡µç‚Äå‡¥Æ‡µÜ‡¥®‡µç‡¥±‡µç ‡¥í‡¥∞‡µÅ ‡¥®‡¥ø‡µº‡¥£‡¥æ‡¥Ø‡¥ï ‡¥µ‡µç‡¥Ø‡¥§‡µç‡¥Ø‡¥æ‡¥∏‡¥Æ‡¥æ‡¥Ø‡¥ø ‡¥Æ‡¥æ‡¥±‡¥ø‡¥Ø‡¥ø‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ. ‡¥Æ‡¥±‡µà‡µª ‡¥°‡µç‡¥∞‡µà‡¥µ‡¥ø‡¥®‡µç ‡¥∏‡¥Æ‡µÄ‡¥™‡¥Ç ‡¥í‡¥∞‡µÅ ‡¥±‡µÜ‡¥∏‡µç‡¥±‡µç‡¥±‡µã‡¥±‡¥®‡µç‡¥±‡µç ‡¥®‡¥ü‡¥§‡µç‡¥§‡µÅ‡¥ï‡¥Ø‡¥æ‡¥£‡µã, ‡¥é‡¥Ç.‡¥ú‡¥ø ‡¥±‡µã‡¥°‡¥ø‡µΩ ‡¥í‡¥∞‡µÅ ‡¥±‡µÄ‡¥ü‡µç‡¥ü‡µÜ‡¥Ø‡¥ø‡µΩ ‡¥∑‡µã‡¥™‡µç‡¥™‡µç ‡¥®‡¥ø‡¥Ø‡¥®‡µç‡¥§‡µç‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï‡¥Ø‡¥æ‡¥£‡µã, ‡¥Ö‡¥≤‡µç‡¥≤‡µÜ‡¥ô‡µç‡¥ï‡¥ø‡µΩ ‡¥ï‡¥æ‡¥ï‡µç‡¥ï‡¥®‡¥æ‡¥ü‡µç‡¥ü‡¥ø‡µΩ ‡¥í‡¥∞‡µÅ ‡¥∏‡µá‡¥µ‡¥® ‡¥¨‡¥ø‡¥∏‡¥ø‡¥®‡¥∏‡µç ‡¥®‡¥ü‡¥§‡µç‡¥§‡µÅ‡¥ï‡¥Ø‡¥æ‡¥£‡µã - ‡¥∂‡¥∞‡¥ø‡¥Ø‡¥æ‡¥Ø ‡¥∏‡µç‡¥±‡µç‡¥±‡¥æ‡¥´‡µç ‡¥Æ‡¥æ‡¥®‡µá‡¥ú‡µç‚Äå‡¥Æ‡µÜ‡¥®‡µç‡¥±‡µç ‡¥∏‡¥Æ‡µÄ‡¥™‡¥®‡¥Ç ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥™‡µç‡¥∞‡¥µ‡µº‡¥§‡µç‡¥§‡¥®‡¥ô‡µç‡¥ô‡¥≥‡µÜ ‡¥™‡¥∞‡¥ø‡¥µ‡µº‡¥§‡µç‡¥§‡¥®‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡¥æ‡¥Ç.

## ‡¥ï‡µä‡¥ö‡µç‡¥ö‡¥ø‡¥Ø‡¥ø‡¥≤‡µÜ ‡¥∏‡µç‡¥±‡µç‡¥±‡¥æ‡¥´‡µç ‡¥Æ‡¥æ‡¥®‡µá‡¥ú‡µç‚Äå‡¥Æ‡µÜ‡¥®‡µç‡¥±‡¥ø‡¥®‡µç‡¥±‡µÜ ‡¥®‡¥ø‡¥≤‡¥µ‡¥ø‡¥≤‡µÜ ‡¥Ö‡¥µ‡¥∏‡µç‡¥•

‡¥ï‡µä‡¥ö‡µç‡¥ö‡¥ø‡¥Ø‡¥ø‡¥≤‡µÜ ‡¥¨‡¥ø‡¥∏‡¥ø‡¥®‡¥∏‡µÅ‡¥ï‡µæ ‡¥∏‡µç‡¥±‡µç‡¥±‡¥æ‡¥´‡µç ‡¥Æ‡¥æ‡¥®‡µá‡¥ú‡µç‚Äå‡¥Æ‡µÜ‡¥®‡µç‡¥±‡¥ø‡¥®‡µç‡¥±‡µÜ ‡¥ï‡¥æ‡¥∞‡µç‡¥Ø‡¥§‡µç‡¥§‡¥ø‡µΩ ‡¥Ö‡¥§‡µÅ‡¥≤‡µç‡¥Ø‡¥Æ‡¥æ‡¥Ø ‡¥µ‡µÜ‡¥≤‡µç‡¥≤‡µÅ‡¥µ‡¥ø‡¥≥‡¥ø‡¥ï‡µæ ‡¥®‡µá‡¥∞‡¥ø‡¥ü‡µÅ‡¥®‡µç‡¥®‡µÅ. ‡¥ï‡µá‡¥∞‡¥≥‡¥§‡µç‡¥§‡¥ø‡µΩ 25,000-‡¥§‡µç‡¥§‡¥ø‡¥≤‡¥ß‡¥ø‡¥ï‡¥Ç SMB-‡¥ï‡µæ ‡¥™‡µç‡¥∞‡¥µ‡µº‡¥§‡µç‡¥§‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥Æ‡µç‡¥™‡µã‡µæ, ‡¥Æ‡¥§‡µç‡¥∏‡¥∞‡¥Ç ‡¥ï‡¥ü‡µÅ‡¥§‡µç‡¥§‡¥§‡µÅ‡¥Ç ‡¥Æ‡¥æ‡µº‡¥ú‡¥ø‡¥®‡µÅ‡¥ï‡µæ ‡¥á‡¥±‡µÅ‡¥ï‡¥ø‡¥Ø‡¥§‡µÅ‡¥Æ‡¥æ‡¥£‡µç.

### ‡¥ï‡µä‡¥ö‡µç‡¥ö‡¥ø ‡¥¨‡¥ø‡¥∏‡¥ø‡¥®‡¥∏‡µÅ‡¥ï‡µæ ‡¥®‡µá‡¥∞‡¥ø‡¥ü‡µÅ‡¥®‡µç‡¥® ‡¥™‡µç‡¥∞‡¥ß‡¥æ‡¥® ‡¥µ‡µÜ‡¥≤‡µç‡¥≤‡µÅ‡¥µ‡¥ø‡¥≥‡¥ø‡¥ï‡µæ:
- ‡¥µ‡¥ø‡¥≤‡¥Ø‡µá‡¥±‡¥ø‡¥Ø ‡¥∏‡¥Æ‡¥Ø‡¥Ç ‡¥ï‡¥¥‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥® ‡¥Æ‡¥æ‡¥®‡µÅ‡¥µ‡µΩ ‡¥™‡µç‡¥∞‡¥ï‡µç‡¥∞‡¥ø‡¥Ø‡¥ï‡µæ
- ‡¥°‡¥æ‡¥±‡µç‡¥± ‡¥∏‡¥ø‡¥≤‡µã‡¥ï‡µæ ‡¥∏‡µÉ‡¥∑‡µç‡¥ü‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥® ‡¥µ‡¥ø‡¥ö‡µç‡¥õ‡µá‡¥¶‡¥ø‡¥ö‡µç‡¥ö ‡¥∏‡¥ø‡¥∏‡µç‡¥±‡µç‡¥±‡¥ô‡µç‡¥ô‡µæ
- ‡¥§‡¥§‡µç‡¥∏‡¥Æ‡¥Ø ‡¥™‡µç‡¥∞‡¥ï‡¥ü‡¥®‡¥§‡µç‡¥§‡¥ø‡¥≤‡µá‡¥ï‡µç‡¥ï‡µÅ‡¥≥‡µç‡¥≥ ‡¥™‡¥∞‡¥ø‡¥Æ‡¥ø‡¥§‡¥Æ‡¥æ‡¥Ø ‡¥¶‡µÉ‡¥∂‡µç‡¥Ø‡¥§
- ‡¥™‡µç‡¥∞‡¥µ‡µº‡¥§‡µç‡¥§‡¥®‡¥ô‡µç‡¥ô‡µæ ‡¥ï‡¥æ‡¥∞‡µç‡¥Ø‡¥ï‡µç‡¥∑‡¥Æ‡¥Æ‡¥æ‡¥Ø‡¥ø ‡¥∏‡µç‡¥ï‡µÜ‡¥Ø‡¥ø‡µΩ ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡¥æ‡¥®‡µÅ‡¥≥‡µç‡¥≥ ‡¥¨‡µÅ‡¥¶‡µç‡¥ß‡¥ø‡¥Æ‡µÅ‡¥ü‡µç‡¥ü‡µç
- ‡¥á‡¥®‡µç‡¥§‡µç‡¥Ø‡µª ‡¥®‡¥ø‡¥Ø‡¥®‡µç‡¥§‡µç‡¥∞‡¥£‡¥ô‡µç‡¥ô‡µæ GST, TDS, ‡¥∏‡¥Ç‡¥∏‡µç‡¥•‡¥æ‡¥®-‡¥®‡¥ø‡µº‡¥¶‡µç‡¥¶‡¥ø‡¥∑‡µç‡¥ü ‡¥Ö‡¥®‡µÅ‡¥∏‡¥∞‡¥£‡¥Ç ‡¥â‡µæ‡¥™‡µç‡¥™‡µÜ‡¥ü‡µÜ

<CTA />

## ‡¥Ü‡¥ß‡µÅ‡¥®‡¥ø‡¥ï ‡¥∏‡µç‡¥±‡µç‡¥±‡¥æ‡¥´‡µç ‡¥Æ‡¥æ‡¥®‡µá‡¥ú‡µç‚Äå‡¥Æ‡µÜ‡¥®‡µç‡¥±‡µç ‡¥™‡¥∞‡¥ø‡¥π‡¥æ‡¥∞‡¥ô‡µç‡¥ô‡µæ ‡¥é‡¥ô‡µç‡¥ô‡¥®‡µÜ ‡¥™‡µç‡¥∞‡¥µ‡µº‡¥§‡µç‡¥§‡¥®‡¥ô‡µç‡¥ô‡¥≥‡µÜ ‡¥™‡¥∞‡¥ø‡¥µ‡µº‡¥§‡µç‡¥§‡¥®‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥®‡µç‡¥®‡µÅ

‡¥∏‡µç‡¥Æ‡¥æ‡µº‡¥ü‡µç‡¥ü‡µç ‡¥ï‡µä‡¥ö‡µç‡¥ö‡¥ø ‡¥¨‡¥ø‡¥∏‡¥ø‡¥®‡¥∏‡µç ‡¥â‡¥ü‡¥Æ‡¥ï‡µæ ‡¥Ü‡¥ß‡µÅ‡¥®‡¥ø‡¥ï ‡¥∏‡µç‡¥±‡µç‡¥±‡¥æ‡¥´‡µç ‡¥Æ‡¥æ‡¥®‡µá‡¥ú‡µç‚Äå‡¥Æ‡µÜ‡¥®‡µç‡¥±‡µç ‡¥™‡¥∞‡¥ø‡¥π‡¥æ‡¥∞‡¥ô‡µç‡¥ô‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥â‡¥ü‡¥®‡¥ü‡¥ø‡¥Ø‡µÅ‡¥Ç ‡¥Ö‡¥≥‡¥ï‡µç‡¥ï‡¥æ‡¥µ‡µÅ‡¥®‡µç‡¥®‡¥§‡µÅ‡¥Æ‡¥æ‡¥Ø ‡¥®‡µá‡¥ü‡µç‡¥ü‡¥ô‡µç‡¥ô‡µæ ‡¥®‡µΩ‡¥ï‡¥æ‡¥®‡¥æ‡¥ï‡µÅ‡¥Æ‡µÜ‡¥®‡µç‡¥®‡µç ‡¥ï‡¥£‡µç‡¥ü‡µÜ‡¥§‡µç‡¥§‡µÅ‡¥®‡µç‡¥®‡µÅ.

### ‡¥™‡µç‡¥∞‡¥ß‡¥æ‡¥® ‡¥®‡µá‡¥ü‡µç‡¥ü‡¥ô‡µç‡¥ô‡µæ:
- ‡¥Ü‡¥¥‡µç‡¥ö‡¥Ø‡¥ø‡µΩ 18 ‡¥Æ‡¥£‡¥ø‡¥ï‡µç‡¥ï‡µÇ‡µº ‡¥∏‡¥Æ‡¥Ø‡¥Ç ‡¥≤‡¥æ‡¥≠‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï
- ‡¥ú‡µÄ‡¥µ‡¥®‡¥ï‡µç‡¥ï‡¥æ‡¥∞‡µÅ‡¥ü‡µÜ ‡¥â‡µΩ‡¥™‡µç‡¥™‡¥æ‡¥¶‡¥®‡¥ï‡µç‡¥∑‡¥Æ‡¥§ 35% ‡¥µ‡µº‡¥¶‡µç‡¥ß‡¥ø‡¥™‡µç‡¥™‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï
- ‡¥™‡µá‡¥±‡µã‡µæ ‡¥™‡¥ø‡¥∂‡¥ï‡µÅ‡¥ï‡µæ 90% ‡¥ï‡µÅ‡¥±‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µÅ‡¥ï
- ‡¥§‡¥§‡µç‡¥∏‡¥Æ‡¥Ø ‡¥™‡µç‡¥∞‡¥ï‡¥ü‡¥® ‡¥ü‡µç‡¥∞‡¥æ‡¥ï‡µç‡¥ï‡¥ø‡¥Ç‡¥ó‡µç
- ‡¥ì‡¥ü‡µç‡¥ü‡µã‡¥Æ‡µá‡¥±‡µç‡¥±‡¥°‡µç ‡¥∑‡µÜ‡¥°‡µç‡¥Ø‡µÇ‡¥≥‡¥ø‡¥Ç‡¥ó‡µÅ‡¥Ç ‡¥≤‡µÄ‡¥µ‡µç ‡¥Æ‡¥æ‡¥®‡µá‡¥ú‡µç‚Äå‡¥Æ‡µÜ‡¥®‡µç‡¥±‡µÅ‡¥Ç

<NewsletterSignup />

## ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥ï‡µä‡¥ö‡µç‡¥ö‡¥ø ‡¥¨‡¥ø‡¥∏‡¥ø‡¥®‡¥∏‡¥ø‡µΩ ‡¥∏‡µç‡¥±‡µç‡¥±‡¥æ‡¥´‡µç ‡¥Æ‡¥æ‡¥®‡µá‡¥ú‡µç‚Äå‡¥Æ‡µÜ‡¥®‡µç‡¥±‡µç ‡¥Æ‡¥ø‡¥ï‡¥ö‡µç‡¥ö ‡¥∞‡µÄ‡¥§‡¥ø‡¥ï‡µæ ‡¥®‡¥ü‡¥™‡µç‡¥™‡¥ø‡¥≤‡¥æ‡¥ï‡µç‡¥ï‡µÅ‡¥ï

### ‡¥ò‡¥ü‡µç‡¥ü‡¥Ç 1: ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥®‡¥ø‡¥≤‡¥µ‡¥ø‡¥≤‡µÜ ‡¥Ö‡¥µ‡¥∏‡µç‡¥• ‡¥µ‡¥ø‡¥≤‡¥Ø‡¥ø‡¥∞‡µÅ‡¥§‡µç‡¥§‡µÅ‡¥ï
‡¥®‡¥ø‡¥≤‡¥µ‡¥ø‡¥≤‡µÅ‡¥≥‡µç‡¥≥ ‡¥∏‡µç‡¥±‡µç‡¥±‡¥æ‡¥´‡µç ‡¥Æ‡¥æ‡¥®‡µá‡¥ú‡µç‚Äå‡¥Æ‡µÜ‡¥®‡µç‡¥±‡µç ‡¥™‡µç‡¥∞‡¥ï‡µç‡¥∞‡¥ø‡¥Ø‡¥ï‡µæ ‡¥µ‡¥ø‡¥≤‡¥Ø‡¥ø‡¥∞‡µÅ‡¥§‡µç‡¥§‡¥ø‡¥ï‡µç‡¥ï‡µä‡¥£‡µç‡¥ü‡µç ‡¥Ü‡¥∞‡¥Ç‡¥≠‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï.

### ‡¥ò‡¥ü‡µç‡¥ü‡¥Ç 2: ‡¥µ‡µç‡¥Ø‡¥ï‡µç‡¥§‡¥Æ‡¥æ‡¥Ø ‡¥≤‡¥ï‡µç‡¥∑‡µç‡¥Ø‡¥ô‡µç‡¥ô‡µæ ‡¥®‡¥ø‡µº‡¥µ‡¥ö‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï
‡¥®‡¥ø‡¥ô‡µç‡¥ô‡µæ ‡¥é‡¥®‡µç‡¥§‡µç ‡¥®‡¥ø‡µº‡¥¶‡µç‡¥¶‡¥ø‡¥∑‡µç‡¥ü ‡¥´‡¥≤‡¥ô‡µç‡¥ô‡¥≥‡¥æ‡¥£‡µç ‡¥®‡µá‡¥ü‡¥æ‡µª ‡¥Ü‡¥ó‡µç‡¥∞‡¥π‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡¥§‡µç?

### ‡¥ò‡¥ü‡µç‡¥ü‡¥Ç 3: ‡¥∂‡¥∞‡¥ø‡¥Ø‡¥æ‡¥Ø ‡¥™‡¥∞‡¥ø‡¥π‡¥æ‡¥∞‡¥Ç ‡¥§‡¥ø‡¥∞‡¥û‡µç‡¥û‡µÜ‡¥ü‡µÅ‡¥ï‡µç‡¥ï‡µÅ‡¥ï
‡¥é‡¥≤‡µç‡¥≤‡¥æ ‡¥∏‡µç‡¥±‡µç‡¥±‡¥æ‡¥´‡µç ‡¥Æ‡¥æ‡¥®‡µá‡¥ú‡µç‚Äå‡¥Æ‡µÜ‡¥®‡µç‡¥±‡µç ‡¥™‡¥∞‡¥ø‡¥π‡¥æ‡¥∞‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥Ç ‡¥§‡µÅ‡¥≤‡µç‡¥Ø‡¥Æ‡¥æ‡¥Ø‡¥ø ‡¥∏‡µÉ‡¥∑‡µç‡¥ü‡¥ø‡¥ï‡µç‡¥ï‡¥™‡µç‡¥™‡µÜ‡¥ü‡µç‡¥ü‡¥ø‡¥ü‡µç‡¥ü‡¥ø‡¥≤‡µç‡¥≤.

### ‡¥ò‡¥ü‡µç‡¥ü‡¥Ç 4: ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥®‡¥ü‡¥™‡µç‡¥™‡¥æ‡¥ï‡µç‡¥ï‡µΩ ‡¥™‡µç‡¥≤‡¥æ‡µª ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï
‡¥µ‡¥ø‡¥ú‡¥Ø‡¥ï‡¥∞‡¥Æ‡¥æ‡¥Ø ‡¥∏‡µç‡¥±‡µç‡¥±‡¥æ‡¥´‡µç ‡¥Æ‡¥æ‡¥®‡µá‡¥ú‡µç‚Äå‡¥Æ‡µÜ‡¥®‡µç‡¥±‡µç ‡¥™‡¥∞‡¥ø‡¥µ‡µº‡¥§‡µç‡¥§‡¥®‡¥Ç ‡¥í‡¥±‡µç‡¥±‡¥∞‡¥æ‡¥§‡µç‡¥∞‡¥ø‡¥ï‡µä‡¥£‡µç‡¥ü‡µç ‡¥∏‡¥Ç‡¥≠‡¥µ‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡¥ø‡¥≤‡µç‡¥≤.

<RelatedPosts currentCity="Kochi" currentPillar="Staff Management" />

## ‡¥â‡¥™‡¥∏‡¥Ç‡¥π‡¥æ‡¥∞‡¥Ç

‡¥ï‡µä‡¥ö‡µç‡¥ö‡¥ø‡¥Ø‡¥ø‡¥≤‡µÜ ‡¥Ö‡¥≠‡¥ø‡¥µ‡µÉ‡¥¶‡µç‡¥ß‡¥ø ‡¥™‡µç‡¥∞‡¥æ‡¥™‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡µª ‡¥Ü‡¥ó‡µç‡¥∞‡¥π‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥® ‡¥¨‡¥ø‡¥∏‡¥ø‡¥®‡¥∏‡µÅ‡¥ï‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥∏‡µç‡¥±‡µç‡¥±‡¥æ‡¥´‡µç ‡¥Æ‡¥æ‡¥®‡µá‡¥ú‡µç‚Äå‡¥Æ‡µÜ‡¥®‡µç‡¥±‡µç ‡¥™‡¥∞‡¥ø‡¥µ‡µº‡¥§‡µç‡¥§‡¥®‡¥Ç ‡¥á‡¥®‡¥ø ‡¥ì‡¥™‡µç‡¥∑‡¥£‡µΩ ‡¥Ö‡¥≤‡µç‡¥≤. ‡¥∂‡¥∞‡¥ø‡¥Ø‡¥æ‡¥Ø ‡¥∏‡¥Æ‡µÄ‡¥™‡¥®‡¥µ‡µÅ‡¥Ç ‡¥â‡¥™‡¥ï‡¥∞‡¥£‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥Ç ‡¥â‡¥™‡¥Ø‡µã‡¥ó‡¥ø‡¥ö‡µç‡¥ö‡µç, ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥â‡µΩ‡¥™‡µç‡¥™‡¥æ‡¥¶‡¥®‡¥ï‡µç‡¥∑‡¥Æ‡¥§ ‡¥µ‡µº‡¥¶‡µç‡¥ß‡¥ø‡¥™‡µç‡¥™‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡¥®‡µÅ‡¥Ç ‡¥ö‡µÜ‡¥≤‡¥µ‡µç ‡¥ï‡µÅ‡¥±‡¥Ø‡µç‡¥ï‡µç‡¥ï‡¥æ‡¥®‡µÅ‡¥Ç ‡¥Æ‡¥ø‡¥ï‡¥ö‡µç‡¥ö ‡¥ü‡µÄ‡¥Æ‡µÅ‡¥ï‡µæ ‡¥®‡¥ø‡µº‡¥Æ‡µç‡¥Æ‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡¥®‡µÅ‡¥Ç ‡¥ï‡¥¥‡¥ø‡¥Ø‡µÅ‡¥Ç.

<FAQ />
`;

      // Update front matter
      const malayalamFrontMatter = frontMatter
        .replace(/title: "(.+)"/, 'title: "‡¥ï‡µä‡¥ö‡µç‡¥ö‡¥ø‡¥Ø‡¥ø‡¥≤‡µÜ ‡¥¨‡¥ø‡¥∏‡¥ø‡¥®‡¥∏‡µÅ‡¥ï‡µæ‡¥ï‡µç‡¥ï‡¥æ‡¥Ø‡¥ø ‡¥∏‡µç‡¥±‡µç‡¥±‡¥æ‡¥´‡µç ‡¥Æ‡¥æ‡¥®‡µá‡¥ú‡µç‚Äå‡¥Æ‡µÜ‡¥®‡µç‡¥±‡µç - ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥¨‡¥ø‡¥∏‡¥ø‡¥®‡¥∏‡µç ‡¥™‡¥∞‡¥ø‡¥µ‡µº‡¥§‡µç‡¥§‡¥®‡¥Ç"')
        .replace(/description: "(.+)"/, 'description: "‡¥ï‡µä‡¥ö‡µç‡¥ö‡¥ø‡¥Ø‡¥ø‡¥≤‡µÜ ‡¥¨‡¥ø‡¥∏‡¥ø‡¥®‡¥∏‡µÅ‡¥ï‡µæ ‡¥é‡¥ô‡µç‡¥ô‡¥®‡µÜ ‡¥Ü‡¥ß‡µÅ‡¥®‡¥ø‡¥ï ‡¥∏‡µç‡¥±‡µç‡¥±‡¥æ‡¥´‡µç ‡¥Æ‡¥æ‡¥®‡µá‡¥ú‡µç‚Äå‡¥Æ‡µÜ‡¥®‡µç‡¥±‡µç ‡¥â‡¥™‡¥Ø‡µã‡¥ó‡¥ø‡¥ö‡µç‡¥ö‡µç ‡¥â‡µΩ‡¥™‡µç‡¥™‡¥æ‡¥¶‡¥®‡¥ï‡µç‡¥∑‡¥Æ‡¥§ ‡¥µ‡µº‡¥¶‡µç‡¥ß‡¥ø‡¥™‡µç‡¥™‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ ‡¥é‡¥®‡µç‡¥®‡µç ‡¥ï‡¥£‡µç‡¥ü‡µÜ‡¥§‡µç‡¥§‡µÅ‡¥ï"')
        .replace(/excerpt: "(.+)"/, 'excerpt: "‡¥ï‡µä‡¥ö‡µç‡¥ö‡¥ø‡¥Ø‡¥ø‡¥≤‡µÜ ‡¥Æ‡µÅ‡µª‡¥®‡¥ø‡¥∞ ‡¥¨‡¥ø‡¥∏‡¥ø‡¥®‡¥∏‡µÅ‡¥ï‡µæ ‡¥Ü‡¥ß‡µÅ‡¥®‡¥ø‡¥ï ‡¥∏‡µç‡¥±‡µç‡¥±‡¥æ‡¥´‡µç ‡¥Æ‡¥æ‡¥®‡µá‡¥ú‡µç‚Äå‡¥Æ‡µÜ‡¥®‡µç‡¥±‡µç ‡¥§‡¥®‡µç‡¥§‡µç‡¥∞‡¥ô‡µç‡¥ô‡µæ ‡¥â‡¥™‡¥Ø‡µã‡¥ó‡¥ø‡¥ö‡µç‡¥ö‡µç ‡¥Ö‡¥µ‡¥∞‡µÅ‡¥ü‡µÜ ‡¥™‡µç‡¥∞‡¥µ‡µº‡¥§‡µç‡¥§‡¥®‡¥ô‡µç‡¥ô‡µæ ‡¥™‡¥∞‡¥ø‡¥µ‡µº‡¥§‡µç‡¥§‡¥®‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥®‡µç‡¥®‡µÅ"')
        + '\nlanguage: "ml"\nscript: "Malayalam"';
      
      const malayalamFile = firstPost.replace('.mdx', '-malayalam.mdx');
      const malayalamPath = path.join(translatedDir, malayalamFile);
      const malayalamFullContent = `---\n${malayalamFrontMatter}\n---\n${fullMalayalamContent}`;
      
      fs.writeFileSync(malayalamPath, malayalamFullContent, 'utf8');
      console.log(`‚úÖ Created Malayalam-only version: ${malayalamFile}`);
    }
  }
  
  console.log('\nüéâ Translation complete!');
  console.log(`üìÇ Translated posts saved to: ${translatedDir}`);
}

// Run the translation
if (require.main === module) {
  translatePosts().catch(console.error);
}

module.exports = { translatePosts };