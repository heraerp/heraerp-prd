'use client'

/**
 * Greenworms ERP - Main Dashboard
 * Generated by HERA Enhanced Autobuild System
 * 
 * Complete waste management and RDF processing platform
 */

import React, { useState, useEffect } from 'react'
import Link from 'next/link'
import { useRouter } from 'next/navigation'
import { MobilePageLayout } from '@/components/mobile/MobilePageLayout'
import { MobileCard } from '@/components/mobile/MobileCard'
import { useHERAAuth } from '@/components/auth/HERAAuthProvider'
import GreenwormNavbar from '@/components/greenworms/GreenwormNavbar'
import { 
  Users,
  FileText,
  MapPin,
  Route,
  Truck,
  UserCheck,
  Trash2,
  Package2,
  Building2,
  Calculator,
  TrendingUp,
  BarChart3,
  Activity,
  AlertCircle,
  CheckCircle,
  Clock,
  Leaf
} from 'lucide-react'

interface DashboardKPI {
  title: string
  value: string
  change: string
  trend: 'up' | 'down'
  icon: React.ComponentType<any>
  color: string
}

interface QuickAction {
  title: string
  description: string
  href: string
  icon: React.ComponentType<any>
  color: string
  module: string
}

export default function GreenwormsDashboard() {
  const router = useRouter()
  const { currentOrganization, isAuthenticated, user } = useHERAAuth()
  const [kpis, setKpis] = useState<DashboardKPI[]>([])
  const [quickActions, setQuickActions] = useState<QuickAction[]>([])

  useEffect(() => {
    // Redirect to Greenworms login if not authenticated
    if (!isAuthenticated) {
      router.push('/greenworms/login')
      return
    }

    // Mock KPI data - in real app, fetch from API
    setKpis([
      {
        title: 'Active Customers',
        value: '1,247',
        change: '+12.3%',
        trend: 'up',
        icon: Users,
        color: '#16a34a'
      },
      {
        title: 'Daily Collections',
        value: '89.5 tons',
        change: '+5.2%',
        trend: 'up',
        icon: Trash2,
        color: '#dc2626'
      },
      {
        title: 'Fleet Efficiency',
        value: '94.2%',
        change: '+2.1%',
        trend: 'up',
        icon: Truck,
        color: '#ea580c'
      },
      {
        title: 'RDF Production',
        value: '12.3 tons',
        change: '+8.7%',
        trend: 'up',
        icon: Package2,
        color: '#0d9488'
      },
      {
        title: 'Pending Invoices',
        value: '24',
        change: '+3.2%',
        trend: 'up',
        icon: FileText,
        color: '#dc2626'
      },
      {
        title: 'Monthly Revenue',
        value: 'â‚¹2.8L',
        change: '+15.4%',
        trend: 'up',
        icon: TrendingUp,
        color: '#16a34a'
      }
    ])

    setQuickActions([
      {
        title: 'Customers',
        description: 'Manage waste collection customers',
        href: '/greenworms/customers',
        icon: Users,
        color: '#16a34a',
        module: 'Customer Management'
      },
      {
        title: 'Add Customer',
        description: 'Onboard new waste collection customer',
        href: '/greenworms/customers/new',
        icon: Users,
        color: '#059669',
        module: 'Customer Onboarding'
      },
      {
        title: 'Contracts',
        description: 'Service agreements and pricing',
        href: '/greenworms/waste-management/contracts',
        icon: FileText,
        color: '#0891b2',
        module: 'Contract Management'
      },
      {
        title: 'Routes',
        description: 'Collection routes optimization',
        href: '/greenworms/waste-management/routes',
        icon: Route,
        color: '#7c3aed',
        module: 'Route Planning'
      },
      {
        title: 'Fleet',
        description: 'Vehicle and equipment management',
        href: '/greenworms/fleet-management/vehicles',
        icon: Truck,
        color: '#ea580c',
        module: 'Fleet Management'
      },
      {
        title: 'Locations',
        description: 'Facilities and service locations',
        href: '/greenworms/waste-management/locations',
        icon: MapPin,
        color: '#dc2626',
        module: 'Location Management'
      },
      {
        title: 'Staff',
        description: 'Drivers, helpers, supervisors',
        href: '/greenworms/waste-management/staff',
        icon: UserCheck,
        color: '#059669',
        module: 'Staff Management'
      },
      {
        title: 'Vendors',
        description: 'Supplier and vendor management',
        href: '/enterprise/procurement/purchasing-rebates/vendors',
        icon: Building2,
        color: '#0d7377',
        module: 'Vendor Management'
      },
      {
        title: 'Accounts',
        description: 'Financial chart of accounts',
        href: '/crm/accounts',
        icon: Calculator,
        color: '#0891b2',
        module: 'Financial Management'
      },
      {
        title: 'Invoicing',
        description: 'Billing and invoice management',
        href: '/greenworms/finance/invoicing',
        icon: FileText,
        color: '#dc2626',
        module: 'Finance Operations'
      },
      {
        title: 'Reports',
        description: 'Financial reports and analytics',
        href: '/greenworms/waste-management/routes',
        icon: Activity,
        color: '#7c3aed',
        module: 'Finance Analytics'
      }
    ])
  }, [isAuthenticated, router])

  if (!isAuthenticated) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50">
        <div className="text-center">
          <div className="animate-spin rounded-full h-16 w-16 border-b-2 border-green-600 mx-auto mb-4"></div>
          <h2 className="text-2xl font-bold text-gray-900 mb-2">Redirecting to Login</h2>
          <p className="text-gray-600">Please wait while we redirect you to the Greenworms login page.</p>
        </div>
      </div>
    )
  }

  if (!currentOrganization) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50">
        <div className="text-center">
          <div className="h-16 w-16 rounded-xl bg-yellow-100 flex items-center justify-center mx-auto mb-4">
            <div className="w-8 h-8 rounded-lg bg-gradient-to-br from-green-500 to-green-600 flex items-center justify-center">
              <Leaf className="w-5 h-5 text-white" />
            </div>
          </div>
          <h2 className="text-2xl font-bold text-gray-900 mb-2">Organization Required</h2>
          <p className="text-gray-600">Please select the Greenworms organization to continue.</p>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Enterprise Navigation */}
      <GreenwormNavbar />

      {/* Main Content */}
      <main className="max-w-full">
        {/* Page Header - SAP S/4HANA Style */}
        <div className="bg-white border-b border-gray-200">
          <div className="max-w-full px-4 sm:px-6 lg:px-8 py-6">
            <div className="flex items-center justify-between">
              <div>
                <h1 className="text-2xl font-bold text-gray-900">Operations Dashboard</h1>
                <p className="text-gray-600 mt-1">
                  Comprehensive waste management and RDF processing overview
                </p>
              </div>
              <div className="flex items-center space-x-4">
                <div className="flex items-center space-x-2 text-sm">
                  <div className="w-3 h-3 bg-green-500 rounded-full"></div>
                  <span className="text-gray-600">All Systems Operational</span>
                </div>
                <span className="text-gray-500 text-sm">
                  Last updated: {new Date().toLocaleTimeString()}
                </span>
              </div>
            </div>
          </div>
        </div>

        {/* Content Container */}
        <div className="max-w-full px-4 sm:px-6 lg:px-8 py-6">

          {/* KPI Dashboard - SAP S/4HANA Style */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6 gap-4 mb-8">
            {kpis.map((kpi, index) => (
              <div key={index} className="bg-white rounded-lg border border-gray-200 shadow-sm hover:shadow-md transition-shadow duration-200">
                <div className="p-6">
                  <div className="flex items-center justify-between mb-3">
                    <div className="p-2 rounded-lg" style={{ backgroundColor: `${kpi.color}15` }}>
                      <kpi.icon className="h-5 w-5" style={{ color: kpi.color }} />
                    </div>
                    <span className={`text-xs font-semibold px-2 py-1 rounded-full ${
                      kpi.trend === 'up' 
                        ? 'bg-green-100 text-green-700' 
                        : 'bg-red-100 text-red-700'
                    }`}>
                      {kpi.change}
                    </span>
                  </div>
                  <div>
                    <p className="text-2xl font-bold text-gray-900 mb-1">{kpi.value}</p>
                    <p className="text-sm font-medium text-gray-600">{kpi.title}</p>
                  </div>
                </div>
              </div>
            ))}
          </div>

      {/* Quick Actions Grid */}
      <div className="mb-6">
        <h3 className="text-lg font-semibold text-gray-900 mb-4 md:hidden">Quick Actions</h3>
        <h3 className="text-xl font-semibold text-gray-900 mb-4 hidden md:block">Operations Dashboard</h3>
        
        <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
          {quickActions.map((action, index) => (
            <Link key={index} href={action.href}>
              <MobileCard className="p-4 hover:shadow-lg transition-all hover:scale-105 cursor-pointer">
                <div className="text-center">
                  <div 
                    className="w-12 h-12 rounded-xl mx-auto mb-3 flex items-center justify-center"
                    style={{ backgroundColor: `${action.color}20` }}
                  >
                    <action.icon className="h-6 w-6" style={{ color: action.color }} />
                  </div>
                  <h4 className="font-semibold text-gray-900 mb-1">{action.title}</h4>
                  <p className="text-xs text-gray-600 mb-2">{action.description}</p>
                  <span className="text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded-full">
                    {action.module}
                  </span>
                </div>
              </MobileCard>
            </Link>
          ))}
        </div>
      </div>

      {/* System Status */}
      <div className="bg-green-50 border border-green-200 rounded-lg p-4 mb-6">
        <div className="flex items-center">
          <CheckCircle className="h-5 w-5 text-green-600 mr-3" />
          <div>
            <h4 className="font-semibold text-green-800">System Status: Operational</h4>
            <p className="text-sm text-green-700">
              All modules are running smoothly. Last updated: {new Date().toLocaleTimeString()}
            </p>
          </div>
        </div>
      </div>

      {/* Recent Activity */}
      <div className="bg-white rounded-lg border border-gray-200 p-4">
        <h4 className="font-semibold text-gray-900 mb-3 flex items-center">
          <Clock className="h-4 w-4 mr-2" />
          Recent Activity
        </h4>
        <div className="space-y-3">
          <div className="flex items-center justify-between py-2">
            <div className="flex items-center">
              <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center mr-3">
                <Users className="h-4 w-4 text-blue-600" />
              </div>
              <div>
                <p className="text-sm font-medium text-gray-900">New customer added</p>
                <p className="text-xs text-gray-500">5 minutes ago</p>
              </div>
            </div>
          </div>
          <div className="flex items-center justify-between py-2">
            <div className="flex items-center">
              <div className="w-8 h-8 bg-orange-100 rounded-full flex items-center justify-center mr-3">
                <Truck className="h-4 w-4 text-orange-600" />
              </div>
              <div>
                <p className="text-sm font-medium text-gray-900">Route optimization completed</p>
                <p className="text-xs text-gray-500">12 minutes ago</p>
              </div>
            </div>
          </div>
          <div className="flex items-center justify-between py-2">
            <div className="flex items-center">
              <div className="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center mr-3">
                <Package2 className="h-4 w-4 text-green-600" />
              </div>
              <div>
                <p className="text-sm font-medium text-gray-900">RDF bale quality check passed</p>
                <p className="text-xs text-gray-500">25 minutes ago</p>
              </div>
            </div>
          </div>
        </div>
      </div>

        </div>
      </main>

      {/* Bottom Spacing for Mobile */}
      <div className="h-24 md:h-0" />
    </div>
  )
}