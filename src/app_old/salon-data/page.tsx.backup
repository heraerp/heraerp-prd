'use client'
/**
 * HERA Salon Modern Full-Screen Dashboard
 * Smart Code: HERA.SALON.MODERN.DASHBOARD.v1
 * 
 * Full-screen mobile-friendly modern salon interface
 */

import React, { useEffect, useState, useRef } from 'react'
import Link from 'next/link'
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Badge } from '@/components/ui/badge'
import { Alert, AlertDescription } from '@/components/ui/alert'
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'
import { useMultiOrgAuth } from '@/components/auth/MultiOrgAuthProvider'
import { salonApiClient } from '@/lib/salon/salon-api-client'
import { MicrosoftSalonCalendar } from '@/components/salon/MicrosoftSalonCalendar'
import { SalonResourceCalendar } from '@/components/salon/SalonResourceCalendar'
import { BookAppointmentModal } from '@/components/salon/BookAppointmentModal'
import SalonAppointmentsFacetedGrid from '@/components/salon/SalonAppointmentsFacetedGrid'
import type { DashboardData, Organization, TabType } from '@/types/salon.types'
import { handleError, withErrorHandler } from '@/lib/salon/error-handler'
import { 
  Users, 
  Calendar, 
  DollarSign, 
  Star,
  Clock,
  Scissors,
  Package,
  Sparkles,
  CalendarCheck,
  UserCheck,
  TrendingUp,
  Plus,
  Loader2,
  RefreshCw,
  Heart,
  Crown,
  Palette,
  Gem,
  Zap,
  Instagram,
  Phone,
  MapPin,
  ChevronRight,
  Menu,
  X,
  MessageCircle,
  CreditCard,
  TrendingDown,
  BarChart3,
  Scale
} from 'lucide-react'
import { cn } from '@/lib/utils'

// Default organization ID for salon - Hair Talkz Park Regis
const DEFAULT_SALON_ORG_ID = 'e3a9ff9e-bb83-43a8-b062-b85e7a2b4258'

// Types moved to @/types/salon.types

export default function SalonModernDashboard() {
  const { currentOrganization, contextLoading } = useMultiOrgAuth()
  const [refreshing, setRefreshing] = useState(false)
  const [selectedTab, setSelectedTab] = useState<TabType>('dashboard')
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false)
  const [isBookingOpen, setIsBookingOpen] = useState(false)
  const [subdomainOrg, setSubdomainOrg] = useState<Organization | null>(null)
  const [loadingSubdomainOrg, setLoadingSubdomainOrg] = useState(true)
  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 })
  const containerRef = useRef<HTMLDivElement>(null)
  const [data, setData] = useState<DashboardData>({
    appointments: 0,
    customers: 0,
    todayRevenue: 0,
    products: 0,
    recentAppointments: [],
    topServices: [],
    staffMembers: [],
    loading: true,
    error: null
  })

  // Sample organization data for demo (always show for demo purposes)
  const salonOrganizations = [
    {
      id: "e3a9ff9e-bb83-43a8-b062-b85e7a2b4258",
      organization_code: "SALON-BR1",
      organization_name: "Hair Talkz • Park Regis Kris Kin (Karama)"
    },
    {
      id: "0b1b37cd-4096-4718-8cd4-e370f234005b",
      organization_code: "SALON-BR2",
      organization_name: "Hair Talkz • Mercure Gold (Al Mina Rd)"
    },
    {
      id: "849b6efe-2bf0-438f-9c70-01835ac2fe15",
      organization_code: "SALON-GROUP",
      organization_name: "Salon Group"
    }
  ]

  // For demo purposes, always enable branch viewing
  const isHeadOffice = true

  // Track mouse movement for interactive glassmorphism effects
  useEffect(() => {
    const handleMouseMove = (e: MouseEvent) => {
      if (containerRef.current) {
        const rect = containerRef.current.getBoundingClientRect()
        setMousePosition({
          x: ((e.clientX - rect.left) / rect.width) * 100,
          y: ((e.clientY - rect.top) / rect.height) * 100
        })
      }
    }

    const container = containerRef.current
    if (container) {
      container.addEventListener('mousemove', handleMouseMove)
      return () => container.removeEventListener('mousemove', handleMouseMove)
    }
  }, [])

  // Get subdomain from URL
  const getSubdomain = () => {
    if (typeof window === 'undefined') return null
    
    const hostname = window.location.hostname
    
    // Check for *.lvh.me domains
    if (hostname.endsWith('.lvh.me')) {
      return hostname.split('.')[0]
    }
    
    // Check for *.localhost domains
    if (hostname.endsWith('.localhost')) {
      return hostname.split('.')[0]
    }
    
    return null
  }

  // Fetch organization by subdomain if not authenticated
  useEffect(() => {
    const fetchOrgBySubdomain = async () => {
      const subdomain = getSubdomain()
      if (!subdomain || currentOrganization) {
        setLoadingSubdomainOrg(false)
        return
      }

      try {
        const response = await fetch(`/api/v1/organizations/by-subdomain?subdomain=${subdomain}`)
        if (response.ok) {
          const data = await response.json()
          if (data.organization) {
            setSubdomainOrg(data.organization)
          }
        }
      } catch (error) {
        console.error('Failed to fetch organization by subdomain:', error)
      } finally {
        setLoadingSubdomainOrg(false)
      }
    }

    fetchOrgBySubdomain()
  }, [currentOrganization])

  // Use organization from context, subdomain, or default
  const organizationId = currentOrganization?.id || subdomainOrg?.id || DEFAULT_SALON_ORG_ID
  
  useEffect(() => {
    if (!contextLoading && !loadingSubdomainOrg) {
      fetchDashboardData()
    }
  }, [organizationId, contextLoading, loadingSubdomainOrg])

  const fetchDashboardData = async () => {
    if (!organizationId) {
      setData(prev => ({ ...prev, loading: false, error: 'No organization ID available' }))
      return
    }

    setRefreshing(true)

    try {
      // Use DNA-compliant API client
      const dashboardData = await salonApiClient.getDashboardData(organizationId)

      setData({
        ...dashboardData,
        loading: false,
        error: null
      })

    } catch (error) {
      const { message } = handleError(error, 'dashboard-fetch', {
        fallbackMessage: 'Failed to fetch dashboard data',
        showToast: true
      })
      setData(prev => ({ 
        ...prev, 
        loading: false, 
        error: message 
      }))
    } finally {
      setRefreshing(false)
    }
  }

  // Loading state
  if (contextLoading || loadingSubdomainOrg || data.loading) {
    return (
      <div className="min-h-screen bg-gray-900 flex items-center justify-center">
        <div className="text-center">
          <div className="relative">
            <div className="w-20 h-20 rounded-xl bg-gradient-to-r from-purple-600 to-blue-600 animate-pulse shadow-2xl" />
            <Scissors className="w-10 h-10 text-white absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2" />
          </div>
          <p className="text-gray-400 mt-4 font-medium">Loading your salon...</p>
        </div>
      </div>
    )
  }

  const statsCards = [
    {
      title: 'Today\'s Appointments',
      value: data.appointments.toString(),
      subtitle: 'appointments',
      icon: CalendarCheck,
      gradient: 'from-purple-500 to-purple-700',
      bgGradient: 'from-white to-purple-50/50',
      darkBgGradient: 'dark:from-gray-800 dark:to-gray-800/95'
    },
    {
      title: 'Active Clients',
      value: data.customers.toString(),
      subtitle: 'total clients',
      icon: UserCheck,
      gradient: 'from-blue-500 to-indigo-600',
      bgGradient: 'from-white to-blue-50/50',
      darkBgGradient: 'dark:from-gray-800 dark:to-gray-800/95'
    },
    {
      title: 'Today\'s Revenue',
      value: `${data.todayRevenue.toFixed(0)}`,
      subtitle: 'AED',
      icon: TrendingUp,
      gradient: 'from-emerald-500 to-teal-600',
      bgGradient: 'from-white to-emerald-50/50',
      darkBgGradient: 'dark:from-gray-800 dark:to-gray-800/95'
    },
    {
      title: 'Products',
      value: data.products.toString(),
      subtitle: 'in stock',
      icon: Package,
      gradient: 'from-amber-500 to-orange-600',
      bgGradient: 'from-white to-amber-50/50',
      darkBgGradient: 'dark:from-gray-800 dark:to-gray-800/95'
    }
  ]

  const services = [
    {
      name: 'Brazilian Blowout',
      duration: '4 hours',
      price: 'AED 500',
      category: 'Chemical Treatment',
      popular: true,
      icon: <Zap className="w-5 h-5" />,
      gradient: 'from-purple-400 to-pink-600'
    },
    {
      name: 'Complete Bridal Package',
      duration: '6 hours',
      price: 'AED 800',
      category: 'Bridal',
      popular: true,
      icon: <Crown className="w-5 h-5" />,
      gradient: 'from-pink-400 to-rose-600'
    },
    {
      name: 'Keratin Treatment',
      duration: '3 hours',
      price: 'AED 350',
      category: 'Chemical Treatment',
      icon: <Sparkles className="w-5 h-5" />,
      gradient: 'from-indigo-400 to-purple-600'
    },
    {
      name: 'Hair Color & Highlights',
      duration: '3 hours',
      price: 'AED 280',
      category: 'Color',
      icon: <Palette className="w-5 h-5" />,
      gradient: 'from-rose-400 to-pink-600'
    },
    {
      name: 'Premium Cut & Style',
      duration: '1.5 hours',
      price: 'AED 150',
      category: 'Cut & Style',
      icon: <Scissors className="w-5 h-5" />,
      gradient: 'from-teal-400 to-emerald-600'
    },
    {
      name: 'Luxury Spa Treatment',
      duration: '2 hours',
      price: 'AED 300',
      category: 'Spa',
      icon: <Gem className="w-5 h-5" />,
      gradient: 'from-amber-400 to-orange-600'
    }
  ]

  // Use staff members from API data, or fallback to sample data
  const team = data.staffMembers.length > 0 ? data.staffMembers.map((staff, index) => ({
    name: staff.entity_name,
    title: staff.metadata?.title || 'Hair Stylist',
    specialties: staff.specialties || [],
    rating: staff.rating || 4.5,
    reviews: Math.floor(Math.random() * 250) + 50,
    instagram: staff.metadata?.instagram || `@${staff.entity_name.toLowerCase().replace(' ', '_')}`,
    avatar: staff.entity_name.charAt(0).toUpperCase(),
    gradient: [
      'from-purple-400 to-pink-600',
      'from-blue-400 to-indigo-600',
      'from-pink-400 to-rose-600',
      'from-amber-400 to-orange-600'
    ][index % 4],
    available: staff.available ?? true
  })) : [
    {
      name: 'Rocky',
      title: 'Celebrity Hair Artist',
      specialties: ['Brazilian Blowout', 'Bridal Styling', 'Color Specialist'],
      rating: 4.9,
      reviews: 247,
      instagram: '@rocky_hair_dubai',
      avatar: 'R',
      gradient: 'from-purple-400 to-pink-600',
      available: true
    },
    {
      name: 'Vinay',
      title: 'Senior Hair Stylist',
      specialties: ['Cutting Expert', 'Men\'s Styling', 'Color'],
      rating: 4.7,
      reviews: 156,
      instagram: '@vinay_styles',
      avatar: 'V',
      gradient: 'from-blue-400 to-indigo-600',
      available: true
    },
    {
      name: 'Maya',
      title: 'Color Specialist',
      specialties: ['Balayage', 'Color Correction', 'Highlights'],
      rating: 4.8,
      reviews: 189,
      instagram: '@maya_colorist',
      avatar: 'M',
      gradient: 'from-pink-400 to-rose-600',
      available: false
    },
    {
      name: 'Sophia',
      title: 'Bridal Specialist',
      specialties: ['Bridal Hair', 'Updos', 'Special Events'],
      rating: 4.9,
      reviews: 203,
      instagram: '@sophia_bridal',
      avatar: 'S',
      gradient: 'from-amber-400 to-orange-600',
      available: true
    }
  ]

  const navigationItems = [
    { id: 'dashboard', label: 'Dashboard', icon: <Sparkles className="w-5 h-5" />, external: true, href: '/salon-data' },
    { id: 'calendar', label: 'Calendar', icon: <Calendar className="w-5 h-5" />, external: true, href: '/salon-data/calendar' },
    { id: 'appointments', label: 'Appointments', icon: <CalendarCheck className="w-5 h-5" />, external: true, href: '/salon-data/appointments' },
    { id: 'customers', label: 'Customers', icon: <Users className="w-5 h-5" />, external: true, href: '/salon-data/customers' },
    { id: 'services', label: 'Services', icon: <Scissors className="w-5 h-5" />, external: true, href: '/salon-data/services' },
    { id: 'inventory', label: 'Inventory', icon: <Package className="w-5 h-5" />, external: true, href: '/salon-data/inventory' },
    { id: 'pos', label: 'POS', icon: <CreditCard className="w-5 h-5" />, external: true, href: '/salon-data/pos' },
    { id: 'finance', label: 'Finance', icon: <TrendingDown className="w-5 h-5" />, external: true, href: '/salon-data/finance' },
    { id: 'pnl', label: 'P&L', icon: <BarChart3 className="w-5 h-5" />, external: true, href: '/salon-data/financials/p&l' },
    { id: 'bs', label: 'Balance Sheet', icon: <Scale className="w-5 h-5" />, external: true, href: '/salon-data/financials/bs' },
    { id: 'payroll', label: 'Payroll', icon: <DollarSign className="w-5 h-5" />, external: true, href: '/salon-data/payroll' },
    { id: 'team', label: 'Our Team', icon: <Users className="w-5 h-5" />, external: true, href: '/salon-data/team' },
    { id: 'whatsapp', label: 'WhatsApp', icon: <MessageCircle className="w-5 h-5" />, external: true, href: '/salon-data/whatsapp' }
  ]

  return (
    <div 
      ref={containerRef}
      className="min-h-screen relative overflow-hidden"
      style={{
        background: `
          linear-gradient(135deg, 
            rgba(0, 0, 0, 0.95) 0%, 
            rgba(17, 24, 39, 0.95) 25%,
            rgba(31, 41, 55, 0.9) 50%,
            rgba(17, 24, 39, 0.95) 75%,
            rgba(0, 0, 0, 0.95) 100%
          ),
          radial-gradient(circle at ${mousePosition.x}% ${mousePosition.y}%, 
            rgba(147, 51, 234, 0.08) 0%, 
            rgba(59, 130, 246, 0.05) 25%,
            rgba(16, 185, 129, 0.03) 50%,
            transparent 70%
          ),
          #0a0a0a
        `
      }}
    >
      {/* WSAG Animated Background Orbs */}
      <div className="fixed inset-0 pointer-events-none">
        {/* Primary Light Orb */}
        <div 
          className="absolute w-96 h-96 rounded-full transition-all duration-[3000ms] ease-in-out"
          style={{
            background: `radial-gradient(circle, 
              rgba(147, 51, 234, 0.15) 0%, 
              rgba(147, 51, 234, 0.08) 30%, 
              rgba(147, 51, 234, 0.02) 60%, 
              transparent 100%
            )`,
            filter: 'blur(60px)',
            left: `${20 + mousePosition.x * 0.1}%`,
            top: `${10 + mousePosition.y * 0.05}%`,
            transform: `translate(-50%, -50%) scale(${1 + mousePosition.x * 0.002})`
          }}
        />
        
        {/* Secondary Light Orb */}
        <div 
          className="absolute w-80 h-80 rounded-full transition-all duration-[4000ms] ease-in-out"
          style={{
            background: `radial-gradient(circle, 
              rgba(59, 130, 246, 0.12) 0%, 
              rgba(59, 130, 246, 0.06) 30%, 
              rgba(59, 130, 246, 0.02) 60%, 
              transparent 100%
            )`,
            filter: 'blur(70px)',
            right: `${15 + mousePosition.x * 0.08}%`,
            top: `${60 + mousePosition.y * 0.03}%`,
            transform: `translate(50%, -50%) scale(${1 + mousePosition.y * 0.002})`
          }}
        />

        {/* Tertiary Light Orb */}
        <div 
          className="absolute w-64 h-64 rounded-full transition-all duration-[5000ms] ease-in-out"
          style={{
            background: `radial-gradient(circle, 
              rgba(16, 185, 129, 0.1) 0%, 
              rgba(16, 185, 129, 0.05) 40%, 
              rgba(16, 185, 129, 0.01) 70%, 
              transparent 100%
            )`,
            filter: 'blur(50px)',
            left: `${70 + mousePosition.y * 0.06}%`,
            bottom: `${20 + mousePosition.x * 0.04}%`,
            transform: `translate(-50%, 50%) scale(${1 + (mousePosition.x + mousePosition.y) * 0.001})`
          }}
        />
      </div>

      {/* Main Content Container */}
      <div className="relative z-10">
      {/* Header with WSAG Glassmorphism */}
      <header 
        className="sticky top-0 z-50 border-b shadow-lg"
        style={{
          background: `
            linear-gradient(135deg, 
              rgba(17, 24, 39, 0.85) 0%, 
              rgba(31, 41, 55, 0.8) 50%,
              rgba(17, 24, 39, 0.85) 100%
            )
          `,
          backdropFilter: 'blur(20px) saturate(120%)',
          WebkitBackdropFilter: 'blur(20px) saturate(120%)',
          border: '1px solid rgba(255, 255, 255, 0.1)',
          borderTop: 'none',
          borderLeft: 'none',
          borderRight: 'none',
          boxShadow: `
            0 8px 32px rgba(0, 0, 0, 0.5),
            0 4px 16px rgba(0, 0, 0, 0.3),
            inset 0 1px 0 rgba(255, 255, 255, 0.05),
            inset 0 -1px 0 rgba(0, 0, 0, 0.3)
          `
        }}
      >
        <div className="px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between h-16">
            {/* Logo with WSAG Glassmorphism */}
            <div className="flex items-center gap-3">
              <div 
                className="w-10 h-10 rounded-xl flex items-center justify-center shadow-lg hover:scale-110 transform transition-all duration-300 cursor-pointer"
                style={{
                  background: `
                    linear-gradient(135deg, 
                      rgba(147, 51, 234, 0.15) 0%, 
                      rgba(59, 130, 246, 0.1) 100%
                    )
                  `,
                  backdropFilter: 'blur(20px) saturate(120%)',
                  WebkitBackdropFilter: 'blur(20px) saturate(120%)',
                  border: '1px solid rgba(255, 255, 255, 0.1)',
                  boxShadow: `
                    0 8px 32px rgba(0, 0, 0, 0.4),
                    0 4px 16px rgba(147, 51, 234, 0.2),
                    inset 0 1px 0 rgba(255, 255, 255, 0.1)
                  `,
                  transform: `perspective(1000px) rotateX(${mousePosition.y * 0.01 - 0.5}deg) rotateY(${mousePosition.x * 0.01 - 0.5}deg)`
                }}
              >
                <Scissors className="w-5 h-5 text-white drop-shadow-md" />
              </div>
              <div>
                <h1 className="text-xl font-bold !text-gray-900 dark:!text-white">
                  Hair Talkz
                </h1>
                <p className="text-xs !text-gray-600 dark:!text-gray-300 font-medium">
                  {isHeadOffice ? 'Head Office - All Branches' : 
                   currentOrganization?.organization_name.split('•')[1]?.trim() || 'Dubai Marina'}
                </p>
              </div>
            </div>

            {/* Desktop Navigation with WSAG Glassmorphism */}
            <nav className="hidden md:flex items-center gap-1">
              {navigationItems.map(item => (
                <Link
                  key={item.id}
                  href={item.href}
                  className={cn(
                    "flex items-center gap-2 px-4 py-2 rounded-lg font-medium transition-all duration-500 hover:scale-105",
                    "!text-gray-700 dark:!text-gray-300 hover:!text-white"
                  )}
                  style={{
                    background: 'rgba(255, 255, 255, 0.05)',
                    backdropFilter: 'blur(10px)',
                    WebkitBackdropFilter: 'blur(10px)',
                    border: '1px solid rgba(255, 255, 255, 0.08)'
                  }}
                >
                  {item.icon}
                  {item.label}
                </Link>
              ))}
            </nav>

            {/* Mobile menu button */}
            <button
              onClick={() => setMobileMenuOpen(!mobileMenuOpen)}
              className="md:hidden p-2 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800"
            >
              {mobileMenuOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
            </button>
          </div>
        </div>

        {/* Mobile Navigation */}
        {mobileMenuOpen && (
          <div className="md:hidden border-t border-gray-800 bg-gray-900/95 backdrop-blur-xl">
            <nav className="px-4 py-2 space-y-1">
              {navigationItems.map(item => (
                <Link
                  key={item.id}
                  href={item.href}
                  className={cn(
                    "w-full flex items-center gap-3 px-4 py-3 rounded-lg font-medium transition-all",
                    "!text-gray-300 hover:bg-gray-800"
                  )}
                  onClick={() => setMobileMenuOpen(false)}
                >
                  {item.icon}
                  {item.label}
                </Link>
              ))}
            </nav>
          </div>
        )}
      </header>

      {/* Main Content */}
      <main className="px-4 sm:px-6 lg:px-8 py-6">
          <div className="space-y-6 animate-fadeIn">
            {/* Quick Actions */}
            <div className="flex flex-wrap gap-3 justify-center sm:justify-start">
              <Button 
                onClick={() => setIsBookingOpen(true)}
                className="bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 text-white shadow-md hover:shadow-lg transform hover:scale-105 transition-all"
              >
                <Plus className="w-4 h-4 mr-2" />
                New Booking
              </Button>
              <Button 
                variant="outline" 
                onClick={fetchDashboardData}
                disabled={refreshing}
                className="border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800"
              >
                <RefreshCw className={cn("w-4 h-4 mr-2", refreshing && "animate-spin")} />
                Refresh
              </Button>
            </div>

            {/* Stats Grid with WSAG Glassmorphism */}
            <div className="grid grid-cols-2 lg:grid-cols-4 gap-4">
              {statsCards.map((stat, index) => (
                <div
                  key={index}
                  className="relative overflow-hidden rounded-xl p-6 cursor-pointer group transition-all duration-700 hover:-translate-y-2"
                  style={{
                    background: `
                      linear-gradient(135deg, 
                        rgba(31, 41, 55, 0.85) 0%, 
                        rgba(17, 24, 39, 0.9) 100%
                      )
                    `,
                    backdropFilter: 'blur(20px) saturate(120%)',
                    WebkitBackdropFilter: 'blur(20px) saturate(120%)',
                    border: '1px solid rgba(255, 255, 255, 0.1)',
                    boxShadow: `
                      0 8px 32px rgba(0, 0, 0, 0.5),
                      0 4px 16px rgba(${
                        stat.gradient.includes('purple') ? '147, 51, 234' :
                        stat.gradient.includes('blue') ? '59, 130, 246' :
                        stat.gradient.includes('emerald') ? '16, 185, 129' : '245, 158, 11'
                      }, 0.1),
                      inset 0 1px 0 rgba(255, 255, 255, 0.05)
                    `,
                    transform: `translateY(${Math.sin((Date.now() + index * 1000) * 0.001) * 2}px)`
                  }}
                >
                  {/* Animated Specular Highlight */}
                  <div 
                    className="absolute inset-0 transition-all duration-1000 opacity-30 group-hover:opacity-60"
                    style={{
                      background: `radial-gradient(circle at ${mousePosition.x}% ${mousePosition.y}%, 
                        rgba(255, 255, 255, 0.08) 0%, 
                        rgba(255, 255, 255, 0.03) 30%, 
                        transparent 70%
                      )`,
                      pointerEvents: 'none',
                      borderRadius: 'inherit'
                    }}
                  />
                  <div className={cn(
                    "absolute top-0 right-0 w-24 h-24 rounded-full bg-gradient-to-br opacity-20",
                    stat.gradient,
                    "blur-2xl"
                  )} />
                  <div className="relative">
                    <div 
                      className="w-12 h-12 rounded-xl flex items-center justify-center mb-4 transition-all duration-300 group-hover:scale-110"
                      style={{
                        background: `linear-gradient(135deg, 
                          rgba(${
                            stat.gradient.includes('purple') ? '147, 51, 234' :
                            stat.gradient.includes('blue') ? '59, 130, 246' :
                            stat.gradient.includes('emerald') ? '16, 185, 129' : '245, 158, 11'
                          }, 0.15) 0%, 
                          rgba(${
                            stat.gradient.includes('purple') ? '147, 51, 234' :
                            stat.gradient.includes('blue') ? '59, 130, 246' :
                            stat.gradient.includes('emerald') ? '16, 185, 129' : '245, 158, 11'
                          }, 0.05) 100%
                        )`,
                        backdropFilter: 'blur(10px)',
                        WebkitBackdropFilter: 'blur(10px)',
                        border: '1px solid rgba(255, 255, 255, 0.1)',
                        boxShadow: `0 4px 16px rgba(${
                          stat.gradient.includes('purple') ? '147, 51, 234' :
                          stat.gradient.includes('blue') ? '59, 130, 246' :
                          stat.gradient.includes('emerald') ? '16, 185, 129' : '245, 158, 11'
                        }, 0.2)`
                      }}
                    >
                      <stat.icon className="w-6 h-6 text-white drop-shadow-md" />
                    </div>
                    <p className="text-3xl font-bold !text-gray-900 dark:!text-white relative z-10">
                      {stat.value}
                    </p>
                    <p className="text-sm !text-gray-700 dark:!text-gray-300 mt-1 font-medium">
                      {stat.subtitle}
                    </p>
                    <p className="text-xs !text-gray-600 dark:!text-gray-400 mt-2">
                      {stat.title}
                    </p>
                  </div>
                </div>
              ))}
            </div>

            {/* Recent Activity */}
            <Card className="bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700 shadow-sm">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Heart className="w-5 h-5 text-pink-500" />
                  Recent Activity
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  {data.recentAppointments.slice(0, 3).map((apt, idx) => (
                    <div key={idx} className="flex items-center justify-between p-4 rounded-lg bg-gray-50 dark:bg-gray-900 border border-gray-200 dark:border-gray-700">
                      <div className="flex items-center gap-3">
                        <div className="w-10 h-10 rounded-full bg-gradient-to-r from-purple-500 to-blue-600 flex items-center justify-center">
                          <span className="text-white font-semibold">
                            {apt.transaction_code?.charAt(0) || 'A'}
                          </span>
                        </div>
                        <div>
                          <p className="font-medium !text-gray-900 dark:!text-white">
                            Appointment #{apt.id?.slice(-4) || '0001'}
                          </p>
                          <p className="text-sm !text-gray-700 dark:!text-gray-300 font-medium">
                            {new Date(apt.transaction_date).toLocaleTimeString('en-US', { 
                              hour: 'numeric', 
                              minute: '2-digit' 
                            })}
                          </p>
                        </div>
                      </div>
                      <ChevronRight className="w-5 h-5 text-gray-400" />
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>

            {/* Quick Stats */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <Card className="bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700 shadow-sm">
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Star className="w-5 h-5 text-yellow-500" />
                    Top Rated Stylist
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="flex items-center gap-4">
                    <div className="w-16 h-16 rounded-full bg-gradient-to-r from-purple-400 to-pink-600 flex items-center justify-center">
                      <span className="text-2xl font-bold text-white">R</span>
                    </div>
                    <div>
                      <p className="text-lg font-semibold !text-gray-900 dark:!text-white">Rocky</p>
                      <p className="text-sm !text-gray-700 dark:!text-gray-300 font-medium">Celebrity Hair Artist</p>
                      <div className="flex items-center gap-1 mt-1">
                        <Star className="w-4 h-4 fill-yellow-500 text-yellow-500" />
                        <span className="text-sm font-medium !text-gray-900 dark:!text-white">4.9</span>
                        <span className="text-sm !text-gray-600 dark:!text-gray-400">(247 reviews)</span>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>

              <Card className="bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700 shadow-sm">
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Crown className="w-5 h-5 text-purple-500" />
                    Most Popular Service
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="flex items-center gap-4">
                    <div className="w-16 h-16 rounded-full bg-gradient-to-r from-purple-400 to-pink-600 flex items-center justify-center">
                      <Zap className="w-8 h-8 text-white" />
                    </div>
                    <div>
                      <p className="text-lg font-semibold !text-gray-900 dark:!text-white">Brazilian Blowout</p>
                      <p className="text-sm !text-gray-700 dark:!text-gray-300 font-medium">4 hours • AED 500</p>
                      <Badge className="mt-1 bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-200 border border-purple-200 dark:border-purple-700">
                        Booked 15 times this week
                      </Badge>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>
          </div>
          <div className="animate-fadeIn">
            <Card className="bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700 shadow-sm">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Calendar className="w-5 h-5 text-purple-500" />
                  Salon Calendar
                </CardTitle>
                <CardDescription>
                  Manage appointments and staff schedules
                </CardDescription>
              </CardHeader>
              <CardContent className="p-0">
                <SalonResourceCalendar 
                  className="min-h-[800px]" 
                  onNewBooking={() => setIsBookingOpen(true)}
                  organizations={salonOrganizations}
                  currentOrganizationId={organizationId}
                  canViewAllBranches={isHeadOffice}
                />
              </CardContent>
            </Card>
          </div>
        )}

        {/* Appointments Tab */}
        {selectedTab === 'appointments' && (
          <div className="animate-fadeIn">
            <SalonAppointmentsFacetedGrid />
          </div>
        )}



        {/* Finance Tab */}
        {selectedTab === 'finance' && (
          <div className="space-y-6 animate-fadeIn">
            <div className="text-center mb-8">
              <h2 className="text-3xl font-bold !text-gray-900 dark:!text-white">
                Financial Management
              </h2>
              <p className="!text-gray-700 dark:!text-gray-300 mt-2 font-medium">
                Track revenue, expenses, and financial performance
              </p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              <Card className="bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700 shadow-sm">
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <TrendingUp className="w-5 h-5 text-green-500" />
                    Today's Revenue
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="text-2xl font-bold text-green-600">AED {data.todayRevenue.toFixed(0)}</div>
                  <p className="text-sm text-gray-500 dark:text-gray-400 mt-1">+12% from yesterday</p>
                </CardContent>
              </Card>

              <Card className="bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700 shadow-sm">
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <TrendingDown className="w-5 h-5 text-red-500" />
                    Monthly Expenses
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="text-2xl font-bold text-red-600">AED 15,240</div>
                  <p className="text-sm text-gray-500 dark:text-gray-400 mt-1">-3% from last month</p>
                </CardContent>
              </Card>

              <Card className="bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700 shadow-sm">
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <DollarSign className="w-5 h-5 text-blue-500" />
                    Net Profit
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="text-2xl font-bold text-blue-600">AED 42,180</div>
                  <p className="text-sm text-gray-500 dark:text-gray-400 mt-1">+18% this month</p>
                </CardContent>
              </Card>
            </div>

            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              <Card className="bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700 shadow-sm">
                <CardHeader>
                  <CardTitle>Financial Summary</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    <div className="flex justify-between items-center">
                      <span className="text-gray-600 dark:text-gray-400">Total Revenue</span>
                      <span className="font-semibold">AED 58,420</span>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-gray-600 dark:text-gray-400">Total Expenses</span>
                      <span className="font-semibold text-red-600">-AED 16,240</span>
                    </div>
                    <div className="flex justify-between items-center border-t pt-2">
                      <span className="font-medium">Net Profit</span>
                      <span className="font-bold text-green-600">AED 42,180</span>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-gray-600 dark:text-gray-400">Profit Margin</span>
                      <span className="font-semibold">72.2%</span>
                    </div>
                  </div>
                </CardContent>
              </Card>

              <Card className="bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700 shadow-sm">
                <CardHeader>
                  <CardTitle>Payment Methods</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    <div className="flex justify-between items-center">
                      <span className="text-gray-600 dark:text-gray-400">Cash</span>
                      <span className="font-semibold">AED 12,450 (21%)</span>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-gray-600 dark:text-gray-400">Card</span>
                      <span className="font-semibold">AED 35,820 (61%)</span>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-gray-600 dark:text-gray-400">Digital Wallet</span>
                      <span className="font-semibold">AED 10,150 (18%)</span>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>
          </div>
        )}

        {/* Team Tab */}
        {selectedTab === 'team' && (
          <div className="space-y-6 animate-fadeIn">
            <div className="text-center mb-8">
              <h2 className="text-3xl font-bold !text-gray-900 dark:!text-white">
                Meet Our Expert Team
              </h2>
              <p className="!text-gray-700 dark:!text-gray-300 mt-2 font-medium">
                Award-winning stylists ready to transform your look
              </p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {data.staffMembers.map((member, index) => (
                <Card
                  key={index}
                  className="bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700 shadow-sm hover:shadow-md transform hover:scale-105 transition-all cursor-pointer overflow-hidden group"
                >
                  <div className="h-2 bg-gradient-to-r from-purple-500 to-blue-500" />
                  <CardContent className="p-6 text-center">
                    <div className="w-20 h-20 mx-auto mb-4 rounded-full bg-gradient-to-r from-purple-500 to-blue-500 flex items-center justify-center">
                      <UserCheck className="w-10 h-10 text-white" />
                    </div>
                    <h3 className="text-xl font-semibold mb-2 !text-gray-900 dark:!text-white">
                      {member.name}
                    </h3>
                    <p className="text-sm !text-gray-600 dark:!text-gray-400 mb-4">
                      {member.specialty}
                    </p>
                    <div className="flex justify-center gap-2 mb-4">
                      {[...Array(5)].map((_, i) => (
                        <Star
                          key={i}
                          className={cn(
                            "w-4 h-4",
                            i < member.rating ? "text-yellow-400 fill-current" : "text-gray-300"
                          )}
                        />
                      ))}
                    </div>
                    <p className="text-sm !text-gray-600 dark:!text-gray-400">
                      {member.experience} years experience
                    </p>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        )}

      </main>

      {/* Floating Action Button (Mobile) */}
      <button 
        onClick={() => setIsBookingOpen(true)}
        className="md:hidden fixed bottom-6 right-6 w-14 h-14 bg-gradient-to-r from-purple-600 to-blue-600 rounded-full shadow-2xl flex items-center justify-center text-white transform hover:scale-110 transition-all"
      >
        <Plus className="w-6 h-6" />
      </button>

      {/* Footer */}
      <footer className="mt-12 border-t border-gray-200 dark:border-gray-800 bg-white dark:bg-gray-900">
        <div className="px-4 sm:px-6 lg:px-8 py-6">
          <div className="flex flex-col sm:flex-row items-center justify-between gap-4">
            <div className="flex items-center gap-2 text-sm !text-gray-700 dark:!text-gray-300 font-medium">
              <MapPin className="w-4 h-4" />
              Dubai Marina Walk, Dubai, UAE
            </div>
            <div className="flex items-center gap-4">
              <a href="tel:+97144234567" className="flex items-center gap-2 text-sm !text-gray-700 dark:!text-gray-300 font-medium hover:!text-purple-600 transition-colors">
                <Phone className="w-4 h-4" />
                +971 4 423 4567
              </a>
              <a href="https://instagram.com/luxurysalondubai" target="_blank" rel="noopener noreferrer" className="text-pink-600 hover:text-purple-600 transition-colors">
                <Instagram className="w-5 h-5" />
              </a>
            </div>
          </div>
        </div>
      </footer>

      {/* Book Appointment Modal */}
      <BookAppointmentModal 
        isOpen={isBookingOpen}
        onClose={() => setIsBookingOpen(false)}
        onBookingComplete={(booking) => {
          // Booking completed successfully
          setIsBookingOpen(false)
          // Refresh dashboard data
          fetchDashboardData()
        }}
      />
      
      </div>
    </div>
  )
}